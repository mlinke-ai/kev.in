{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documentation for Kev.in","text":"<p>Kev.in is a learning platform for programming beginners. It is released under the GNU GPL v3.</p> <p>The source code of Kev.in can be downloaded at:</p> <p>GitHub</p> <p>The documentation can be found online at:</p> <p>GitHub Pages</p> <p>Bug reports should be done through the Issue Tracker of Kev.in on GitHub.</p>"},{"location":"#testing","title":"Testing","text":"<p>To perform tests, start the server in testing mode with <code>python3 run.py --debug --clean --testing</code> and run <code>python3 -m unittest discover</code> in the root of the project.</p>"},{"location":"#coverage","title":"Coverage","text":"<p>The test coverage can be tested with <code>python3 -m coverage run -m unittest</code> and <code>python3 -m coverage report -i</code>.</p>"},{"location":"installation/","title":"Installation of Kev.in","text":"<p>Basically Kev.in can run on any system. It relies mostly on Python, some Python libraries (Flask and SQLAlchemy) and Docker.</p>"},{"location":"installation/#dependencies","title":"Dependencies","text":"<p>The necessary packages should be easily available on any recent system. Installation of the dependencies is not part of this documentation. Older versions of these packages may work but have not been tested.</p> <ul> <li>python == 3.10 or higher</li> <li>npm == 8.3</li> </ul>"},{"location":"installation/#download","title":"Download","text":"<p>The source code of Kev.in can be downloaded from GitHub:</p> <pre><code>git clone https://github.com/mlinke-ai/kev_in.git\n</code></pre>"},{"location":"installation/#python-packages","title":"Python packages","text":"<p>After cloning the repository, run</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>in the root folder.</p>"},{"location":"installation/#frontend","title":"Frontend","text":"<p>The frontend is based on the Svelte framework which basically compiles static files at build time. To build the frontend change into the <code>frontend</code> folder and run</p> <pre><code>npm install\n</code></pre> <p>followed by</p> <pre><code>npm run build\n</code></pre>"},{"location":"installation/#executing","title":"Executing","text":"<p>To run the server go back to the root folder an run: <pre><code>python run.py --host --testing --clean\n</code></pre> A Flask-server now will be live on the systems IP-address.</p>"},{"location":"installation/#run-as-docker-container","title":"Run as Docker container","text":"<p>TODO: add documentation</p>"},{"location":"license/","title":"License","text":""},{"location":"license/#gnu-general-public-license","title":"GNU GENERAL PUBLIC LICENSE","text":"<p>Version 3, 29 June 2007</p> <pre><code>Copyright \u00a9 2007 Free Software Foundation, Inc. &lt;https://fsf.org/&gt;\n\nEveryone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\n</code></pre>"},{"location":"license/#preamble","title":"Preamble","text":"<p>The GNU General Public License is a free, copyleft license for software and other kinds of works.</p> <p>The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too.</p> <p>When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.</p> <p>To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others.</p> <p>For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.</p> <p>Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it.</p> <p>For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions.</p> <p>Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users.</p> <p>Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free.</p> <p>The precise terms and conditions for copying, distribution and modification follow.</p>"},{"location":"license/#terms-and-conditions","title":"TERMS AND CONDITIONS","text":""},{"location":"license/#0-definitions","title":"0. Definitions.","text":"<p>\u201cThis License\u201d refers to version 3 of the GNU General Public License.</p> <p>\u201cCopyright\u201d also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.</p> <p>\u201cThe Program\u201d refers to any copyrightable work licensed under this License. Each licensee is addressed as \u201cyou\u201d. \u201cLicensees\u201d and \u201crecipients\u201d may be individuals or organizations.</p> <p>To \u201cmodify\u201d a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \u201cmodified version\u201d of the earlier work or a work \u201cbased on\u201d the earlier work.</p> <p>A \u201ccovered work\u201d means either the unmodified Program or a work based on the Program.</p> <p>To \u201cpropagate\u201d a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.</p> <p>To \u201cconvey\u201d a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.</p> <p>An interactive user interface displays \u201cAppropriate Legal Notices\u201d to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.</p>"},{"location":"license/#1-source-code","title":"1. Source Code.","text":"<p>The \u201csource code\u201d for a work means the preferred form of the work for making modifications to it. \u201cObject code\u201d means any non-source form of a work.</p> <p>A \u201cStandard Interface\u201d means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.</p> <p>The \u201cSystem Libraries\u201d of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \u201cMajor Component\u201d, in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.</p> <p>The \u201cCorresponding Source\u201d for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.</p> <p>The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.</p> <p>The Corresponding Source for a work in source code form is that same work.</p>"},{"location":"license/#2-basic-permissions","title":"2. Basic Permissions.","text":"<p>All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.</p> <p>You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.</p> <p>Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.</p>"},{"location":"license/#3-protecting-users-legal-rights-from-anti-circumvention-law","title":"3. Protecting Users' Legal Rights From Anti-Circumvention Law.","text":"<p>No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.</p> <p>When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.</p>"},{"location":"license/#4-conveying-verbatim-copies","title":"4. Conveying Verbatim Copies.","text":"<p>You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.</p> <p>You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.</p>"},{"location":"license/#5-conveying-modified-source-versions","title":"5. Conveying Modified Source Versions.","text":"<p>You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:</p> <ol> <li>The work must carry prominent notices stating that you modified it, and giving a relevant date.</li> <li>The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \u201ckeep intact all notices\u201d.</li> <li>You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it.</li> <li>If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so.</li> </ol> <p>A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \u201caggregate\u201d if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.</p>"},{"location":"license/#6-conveying-non-source-forms","title":"6. Conveying Non-Source Forms.","text":"<p>You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:</p> <ol> <li>Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange.</li> <li>Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge.</li> <li>Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b.</li> <li>Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements.</li> <li>Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d.</li> </ol> <p>A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.</p> <p>A \u201cUser Product\u201d is either (1) a \u201cconsumer product\u201d, which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \u201cnormally used\u201d refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.</p> <p>\u201cInstallation Information\u201d for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.</p> <p>If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).</p> <p>The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.</p> <p>Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.</p>"},{"location":"license/#7-additional-terms","title":"7. Additional Terms.","text":"<p>\u201cAdditional permissions\u201d are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.</p> <p>When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.</p> <p>Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:</p> <ol> <li>Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or</li> <li>Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or</li> <li>Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or</li> <li>Limiting the use for publicity purposes of names of licensors or authors of the material; or</li> <li>Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or</li> <li>Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors.</li> </ol> <p>All other non-permissive additional terms are considered \u201cfurther restrictions\u201d within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.</p> <p>If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.</p> <p>Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.</p>"},{"location":"license/#8-termination","title":"8. Termination.","text":"<p>You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).</p> <p>However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.</p> <p>Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.</p> <p>Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.</p>"},{"location":"license/#9-acceptance-not-required-for-having-copies","title":"9. Acceptance Not Required for Having Copies.","text":"<p>You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.</p>"},{"location":"license/#10-automatic-licensing-of-downstream-recipients","title":"10. Automatic Licensing of Downstream Recipients.","text":"<p>Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License.</p> <p>An \u201centity transaction\u201d is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.</p> <p>You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.</p>"},{"location":"license/#11-patents","title":"11. Patents.","text":"<p>A \u201ccontributor\u201d is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \u201ccontributor version\u201d.</p> <p>A contributor's \u201cessential patent claims\u201d are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \u201ccontrol\u201d includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.</p> <p>Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.</p> <p>In the following three paragraphs, a \u201cpatent license\u201d is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \u201cgrant\u201d such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.</p> <p>If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \u201cKnowingly relying\u201d means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.</p> <p>If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.</p> <p>A patent license is \u201cdiscriminatory\u201d if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.</p> <p>Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.</p>"},{"location":"license/#12-no-surrender-of-others-freedom","title":"12. No Surrender of Others' Freedom.","text":"<p>If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.</p>"},{"location":"license/#13-use-with-the-gnu-affero-general-public-license","title":"13. Use with the GNU Affero General Public License.","text":"<p>Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.</p>"},{"location":"license/#14-revised-versions-of-this-license","title":"14. Revised Versions of this License.","text":"<p>The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.</p> <p>Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License \u201cor any later version\u201d applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation.</p> <p>If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program.</p> <p>Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.</p>"},{"location":"license/#15-disclaimer-of-warranty","title":"15. Disclaimer of Warranty.","text":"<p>THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \u201cAS IS\u201d WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.</p>"},{"location":"license/#16-limitation-of-liability","title":"16. Limitation of Liability.","text":"<p>IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</p>"},{"location":"license/#17-interpretation-of-sections-15-and-16","title":"17. Interpretation of Sections 15 and 16.","text":"<p>If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.</p> <p>END OF TERMS AND CONDITIONS</p>"},{"location":"api/config/","title":"Configuration","text":"<p>The <code>backend/lib/core/config.py</code> file defines some initial configurations and global names.</p>"},{"location":"api/config/#sadmin_name","title":"SADMIN_NAME","text":"<p>The name with which the SAdmin account gets initialized. Defaults to <code>sadmin</code>.</p>"},{"location":"api/config/#sadmin_pass","title":"SADMIN_PASS","text":"<p>The password with which the SAdmin accounts gets initialized. Defaults to <code>sadmin</code>.</p> <p>Security hazard</p> <p>Change this password immediately after the first login.</p>"},{"location":"api/config/#sadmin_mail","title":"SADMIN_MAIL","text":"<p>The mail address with which the SAdmin account gets initialized. Defaults to <code>sadmin@example.com</code>.</p>"},{"location":"api/config/#user_table","title":"USER_TABLE","text":"<p>The table name of the user table. Defaults to <code>users</code>.</p>"},{"location":"api/config/#exercise_table","title":"EXERCISE_TABLE","text":"<p>The table name of the exercise table. Defaults to <code>exercises</code>.</p>"},{"location":"api/config/#solution_table","title":"SOLUTION_TABLE","text":"<p>The table name of the solution table. Defaults to <code>solutions</code>.</p>"},{"location":"api/config/#max_items_returned","title":"MAX_ITEMS_RETURNED","text":"<p>The number of items which one request should return on maximum. This value is used to prevent overwhelming the server. Defaults to <code>20</code>.</p>"},{"location":"api/config/#userrole","title":"UserRole","text":"<p>An enumeration to standardize the user roles. The roles are as follows:</p> ID Role Description <code>1</code> SAdmin The super admin role. The super admin can do every thing a normal admin can do plus managing admin roles. There should be only one super admin. <code>2</code> Admin A normal admin can create, change and delete exercises. The admin also has to evaluate solutions which can not be evaluated automatically. <code>3</code> User A normal user of the system. The user can only get exercises and submit solutions."},{"location":"api/config/#exercisetype","title":"ExerciseType","text":"<p>An enumeration to standardize exercise types. The types are as follows:</p> ID Type Description <code>1</code> GapTextExercise An exercise where the user has fill in blanks to complete a given program. <code>2</code> SyntaxExercise An exercise where the user has to point out one ore more syntax errors in a given program. <code>3</code> ParsonsPuzzleExercise An exercise where the user has to arrange given code blocks into the proper order. <code>4</code> FindTheBugExercise An exercise where the user has point out one or more bugs in a given program. <code>5</code> DocumentationExercise An exercise where the user has to describe the behavior of a given program. <code>6</code> OutputExercise An exercise where the user has to describe the output which a given program produces. <code>7</code> ProgrammingExercise An exercise where the user has to write a program which produces a desired output."},{"location":"api/config/#exerciselanguage","title":"ExerciseLanguage","text":"<p>An enumeration to standardize the programming language used in an exercise. The languages are as follows:</p> ID Language Description <code>1</code> Python There is nothing much to say about Python; it's simply the best. <code>2</code> Java Why does this abomination exist?"},{"location":"api/exercise/","title":"Exercise API","text":"<p>The exercise route is the endpoint to perform all different kinds of operations on the exercise database.</p> <p>The endpoint can be accessed at <code>&lt;address&gt;:&lt;port&gt;/exercise</code>.</p> <p>This endpoint is only accessible if the client is logged in as a existing user (if he sends the session cookie with a JWT inside).</p>"},{"location":"api/exercise/#get","title":"GET","text":"<p>The GET method is used to retrieve exercise data based on attributes. This method supports paging. Paging prevents overwhelming the API by reducing the number of returned elements. When a request is expected to return a huge number of elements, one can reduce the number of elements with the <code>exercise_offset</code> and <code>exercise_limit</code> arguments. <code>exercise_offset</code> defines the lowest <code>exercise_id</code> while <code>exercise_limit</code> defines the number of elements in the page. The default value for <code>exercise_limit</code> is defined in <code>config.MAX_ITEMS_RETURNED</code>. To get all values, simply execute multiple requests with adjusted values for <code>exercise_offset</code>. If <code>exercise_id</code> is provided <code>exercise_offset</code> and <code>exercise_limit</code> get ignored.</p>"},{"location":"api/exercise/#access","title":"Access","text":"<p>Python <code>requests</code>:</p> <pre><code>requests.request(\"GET\", \"http://&lt;address&gt;:&lt;port&gt;/exercise?&lt;URLarguments&gt;\")\n</code></pre> <p>Unix <code>curl</code>:</p> <pre><code>curl --location --request GET 'http://&lt;address&gt;:&lt;port&gt;/exercise?&lt;URLarguments&gt;'\n</code></pre> <p>JavaScript <code>fetch</code>:</p> <pre><code>fetch(\"http://&lt;address&gt;:&lt;port&gt;/exercise?&lt;URLarguments&gt;\", {method: \"GET\"})\n</code></pre> <p>Replace <code>&lt;address&gt;</code> and <code>&lt;port&gt;</code> with your respective setup. Replace <code>&lt;URLarguments&gt;</code> with key value pairs in the form <code>key=value</code>(key is the argument, example values are listed in the table below). Multiple arguments are separated with <code>&amp;</code>.</p>"},{"location":"api/exercise/#arguments","title":"Arguments","text":"Argument Type Necessity Example Description <code>exercise_id</code> <code>int</code> optional <code>1</code> The ID of the exercise. Normally obtained after creating a new exercise. This argument can be provided multiple times to select multiple exercises. All other arguments still apply. <code>exercise_title</code> <code>string</code> optional <code>My Exercise</code> The display title of the exercise. <code>exercise_description</code> <code>string</code> optional <code>This is a good Test example!</code> The description of the exercise <code>exercise_type</code> <code>int</code> optional <code>2</code> The type of the exercise: <code>1</code> for GapTextExercise, <code>2</code> for SyntaxExercise, <code>3</code> for ParsonsPuzzleExercise, <code>4</code> for FindTheBugExercise, <code>5</code> for DocumentationExercise, <code>6</code> for OutputExercise, <code>7</code> for ProgrammingExercise <code>exercise_content</code> <code>dict</code> optional <code>{\"list\": [\"Hello\", \"World\", \"this\", \"is\", \"the\", \"first\", \"exercise\"]}</code> A JSON dict or object, containing the content of the exercise. The encoding is <code>exercise_type</code>-specific. <code>exercise_page</code> <code>int</code> optional <code>1</code> The page of the query result. Default value is 1. <code>exercise_limit</code> <code>int</code> optional <code>1</code> The size of a page. If a page is requested and <code>user_limit</code> is not set <code>config.MAX_ITEMS_RETURNED</code> gets used as default value. <code>exercise_language</code> <code>int</code> optional <code>Python</code> Programming Language of the exercise. <code>1</code> for Python, <code>2</code> for Java <code>exercise_details</code> <code>bool</code> optional <code>true</code> Query the system for advanced exercise details. <code>exercise_solution</code> <code>dict</code> optional <code>{\"list\": [\"Hello\", \"World\", \"this\", \"is\", \"the\", \"first\", \"exercise\"]}</code> A JSON object or dict, containing the solution of the exercise. The encoding is <code>exercise_type</code>-specific. <p>Arguments are constructed as dictionaries or JSON objects.</p>"},{"location":"api/exercise/#response","title":"Response","text":"<p>NOTE: It is possible that the system returns up to <code>Config.MAX_ITEMS_RETURNED</code> items.</p> 200204400401403 <p>The response is a dictionary of JSON object. <code>\"data\"</code> is mapped to the query result as a list. <code>\"meta\"</code> is mapped to the meta data.</p> <p>Response structure: | Field | Description | |:--|:--| | <code>\"data\"</code> | A list of the elements returned by the query ordered by <code>exercise_id</code>. | | <code>\"next_page\"</code> | The index of the next page. If there is no next page this value will be <code>null</code>. | | <code>\"next_url\"</code> | The URL to request the next page. If there is no next page this value will be <code>null</code>. | | <code>\"page_size\"</code> | The number of elements in the current page. | | <code>\"pages\"</code> | The number of pages. | | <code>\"prev_page\"</code> | The index of the previous page. If the is no previous page this value will be <code>null</code>. | | <code>\"prev_url\"</code> | The URL to request the previous page. If there is no previous page this value will be <code>null</code>. | | <code>\"total\"</code> | The total number of elements which match the query. Basically the sum of all page sizes. |</p> <pre><code>{\n\"data\": [\n{\n\"exercise_id\": 70,\n\"exercise_language_name\": \"Python\",\n\"exercise_language_value\": 1,\n\"exercise_title\": \"ProgrammingExercise9\",\n\"exercise_type_name\": \"ProgrammingExercise\",\n\"exercise_type_value\": 7\n}\n],\n\"meta\": {\n\"next_page\": null,\n\"next_url\": null,\n\"page_size\": 1,\n\"pages\": 1,\n\"prev_page\": null,\n\"prev_url\": null,\n\"total\": 1\n}\n}\n</code></pre> <p>The database query yielded no results with the given parameters. The response body is empty.</p> <p>The <code>exercise_limit</code> is out of range, e.g. grater then <code>config.MAX_ITEMS_RETURNED</code>.</p> <pre><code>{\n\"message\": \"Page limit not in range\",\n\"min_limit\": \"&lt;min_value&gt;\",\n\"max_limit\": \"&lt;max_value&gt;\"\n}\n</code></pre> <p>No session cookie was provided.</p> <pre><code>{\n\"message\": \"Login required\"\n}\n</code></pre> <p>An unauthorized client sent a request.</p> <pre><code>{\n\"message\": \"No Access\"\n}\n</code></pre>"},{"location":"api/exercise/#post","title":"POST","text":"<p>The post method is used to create new exercises.</p>"},{"location":"api/exercise/#access_1","title":"Access","text":"<p>This method is usable for all admins.</p> <p>Python <code>requests</code>:</p> <pre><code>requests.request(\"POST\", \"http://&lt;address&gt;:&lt;port&gt;/exercise\", json=&lt;arguments&gt;, headers={\"Content-Type\": \"application/json\"})\n</code></pre> <p>Unix <code>curl</code>:</p> <pre><code>curl --location --request POST 'http://&lt;address&gt;:&lt;port&gt;/exercise' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    &lt;arguments&gt;\n}'\n</code></pre> <p>JavaScript <code>fetch</code>:</p> <pre><code>fetch(\"http://&lt;address&gt;:&lt;port&gt;/exercise\", {method: \"POST\", headers={\"Content-Type\": \"application/json\"}, body: JSON.stringify(&lt;arguments&gt;)})\n</code></pre> <p>Replace <code>&lt;address&gt;</code> and <code>&lt;port&gt;</code> with your respective setup. Replace <code>&lt;arguments&gt;</code> with the arguments listed below. (in curl in key value pairs <code>\"&lt;key&gt;\": \"&lt;value&gt;\"</code>)</p>"},{"location":"api/exercise/#arguments_1","title":"Arguments","text":"Argument Type Necessity Example Description <code>exercise_title</code> <code>string</code> required <code>My Exercise</code> The display title of the exercise. <code>exercise_description</code> <code>string</code> required <code>This is a good Test example!</code> The description of the exercise <code>exercise_type</code> <code>int</code> required <code>1</code> Number between 1 and 7 for the different exercise types, as defined in the database model. <code>exercise_content</code> <code>dict</code> required <code>{\"list\": [\"Hello\", \"World\", \"this\", \"is\", \"the\", \"first\", \"exercise\"]}</code> A JSON dict or object, containing the content of the exercise. The encoding is <code>exercise_type</code>-specific. <code>exercise_language</code> <code>int</code> required <code>Python</code> Programming Language of the exercise. <code>1</code> for Python, <code>2</code> for Java <code>exercise_solution</code> <code>dict</code> required <code>{\"list\": [\"Hello\", \"World\", \"this\", \"is\", \"the\", \"first\", \"exercise\"]}</code> A JSON object or dict, containing the solution of the exercise. The encoding is <code>exercise_type</code>-specific. <p>Arguments are constructed as dictionaries or JSON objects.</p>"},{"location":"api/exercise/#response_1","title":"Response","text":"201400401403409500 <p>The response is a dictionary or JSON object, Together with HTTP status 201. All attributes of the created exercise will be shown, together with a response message.</p> <pre><code>{\n\"exercise_content\": {\n\"list\": [\n\"Hello\",\n\"this\",\n\"World\",\n\"is\",\n\"the\",\n\"first\",\n\"exercise\"\n]\n},\n\"exercise_description\": \"This is a good Test example!\",\n\"exercise_id\": 71,\n\"exercise_title\": \"MyExercise2\",\n\"message\": \"The exercise was created successfully\"\n}\n</code></pre> <p>A required argument was not send.</p> <pre><code>{\n\"message\": {\n\"argument\": \"Error Text\"\n}\n}\n</code></pre> <p>No session cookie was provided.</p> <pre><code>{\n\"message\": \"Login required\"\n}\n</code></pre> <p>An unauthorized client sent a request.</p> <pre><code>{\n\"message\": \"No Access\"\n}\n</code></pre> <p>An exercise with the given <code>exercise_title</code> already exists.</p> <pre><code>{\n\"message\": \"An exercise with this title already exists\"\n}\n</code></pre> <p>The element could not be added to the database for some reason.</p> <pre><code>{\n\"message\": \"An error occurred while creating the exercise\"\n}\n</code></pre>"},{"location":"api/exercise/#put","title":"PUT","text":"<p>The put method is used to change arguments from an exercise.</p>"},{"location":"api/exercise/#access_2","title":"Access","text":"<p>This method is usable for all admins.</p> <p>Python <code>requests</code>:</p> <pre><code>requests.request(\"PUT\", \"http://&lt;address&gt;:&lt;port&gt;/exercise\", json=&lt;arguments&gt;, headers={\"Content-Type\": \"application/json\"})\n</code></pre> <p>Unix <code>curl</code>:</p> <pre><code>curl --location --request PUT 'http://&lt;address&gt;:&lt;port&gt;/exercise' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    &lt;arguments&gt;\n}'\n</code></pre> <p>JavaScript <code>fetch</code>:</p> <pre><code>fetch(\"http://&lt;address&gt;:&lt;port&gt;/exercise\", {method: \"PUT\", headers={\"Content-Type\": \"application/json\", \"Cookie\": \"token=&lt;token&gt;\"}, body: JSON.stringify(&lt;arguments&gt;)})\n</code></pre> <p>Replace <code>&lt;address&gt;</code> and <code>&lt;port&gt;</code> with your respective setup. Replace <code>&lt;arguments&gt;</code> with the arguments listed below. (in curl in key value pairs <code>\"&lt;key&gt;\": \"&lt;value&gt;\"</code>)</p>"},{"location":"api/exercise/#arguments_2","title":"Arguments","text":"Argument Type Necessity Example Description <code>exercise_id</code> <code>int</code> required <code>1</code> The ID of the exercise. Normally obtained after creating a new exercise. <code>exercise_title</code> <code>string</code> optional <code>My Exercise</code> The display title of the exercise. <code>exercise_description</code> <code>string</code> optional <code>This is a good Test example!</code> The description of the exercise <code>exercise_type</code> <code>int</code> optional <code>1</code> Number between 1 and 7 for the different exercise types, as defined in the database model. <p>Arguments are constructed as dictionaries or JSON objects.</p>"},{"location":"api/exercise/#response_2","title":"Response","text":"200400401403404 <p>The response is a dictionary or JSON object, together with HTTP status 200. The response is a message.</p> <pre><code>{\n\"message\": \"Successfully changed exercise with exercise_id 1\"\n}\n</code></pre> <p>A required argument was not sent.</p> <pre><code>{\n\"message\": {\n\"argument\": \"Error Text\"\n}\n}\n</code></pre> <p>No session cookie was provided.</p> <pre><code>{\n\"message\": \"Login required\"\n}\n</code></pre> <p>An unauthorized client sent a request.</p> <pre><code>{\n\"message\": \"No Access\"\n}\n</code></pre> <p>No exercise with the given <code>exercise_id</code> exists.</p> <pre><code>{\n\"message\": \"Exercise with exercise_id 1 does not exist\"\n}\n</code></pre>"},{"location":"api/exercise/#delete","title":"DELETE","text":"<p>The delete method is used to delete an existing exercise.</p>"},{"location":"api/exercise/#access_3","title":"Access","text":"<p>This method is usable for all admins.</p> <p>Python <code>requests</code>:</p> <pre><code>requests.request(\"DELETE\", \"http://&lt;address&gt;:&lt;port&gt;/exercise\", json=&lt;arguments&gt;, headers={\"Content-Type\": \"application/json\"})\n</code></pre> <p>Unix <code>curl</code>:</p> <pre><code>curl --location --request DELETE 'http://&lt;address&gt;:&lt;port&gt;/exercise' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    &lt;arguments&gt;\n}'\n</code></pre> <p>JavaScript <code>fetch</code>:</p> <pre><code>fetch(\"http://&lt;address&gt;:&lt;port&gt;/exercise\", {method: \"DELETE\", headers={\"Content-Type\": \"application/json\"}, body: JSON.stringify(&lt;arguments&gt;)})\n</code></pre> <p>Replace <code>&lt;address&gt;</code> and <code>&lt;port&gt;</code> with your respective setup. Replace <code>&lt;arguments&gt;</code> with the arguments listed below. (in curl in key value pairs <code>\"&lt;key&gt;\": \"&lt;value&gt;\"</code>)</p>"},{"location":"api/exercise/#arguments_3","title":"Arguments","text":"Argument Type Necessity Example Description <code>exercise_id</code> <code>int</code> required <code>1</code> The ID of the exercise. Normally obtained after creating a new exercise. <p>Arguments are constructed as dictionaries or JSON objects.</p>"},{"location":"api/exercise/#response_3","title":"Response","text":"200400401403400 <p>The response is a dictionary or JSON object, Together with HTTP status 200. The response is a message.</p> <pre><code>{\n\"message\": \"Successfully deleted exercise with exercise_id 1\"\n}\n</code></pre> <p>A required argument was not sent.</p> <pre><code>{\n\"message\": {\n\"argument\": \"Error Text\"\n}\n}\n</code></pre> <p>No session cookie was provided.</p> <pre><code>{\n\"message\": \"Login required\"\n}\n</code></pre> <p>An unauthorized client senT a request.</p> <pre><code>{\n\"message\": \"No Access\"\n}\n</code></pre> <p>No exercise with the given <code>exercise_id</code> exists.</p> <pre><code>{\n\"message\": \"Exercise with exercise_id 1 does not exist\"\n}\n</code></pre>"},{"location":"api/exercise_format/","title":"Exercise Format Definitions","text":"<p>All exercise types define special data formats for the attributes <code>exercise_content</code>, <code>exercise_solution</code> (ExerciseModel) and <code>solution_content</code> (SolutionModel). All definitions follow the JSON standard and are listed below.</p>"},{"location":"api/exercise_format/#parsons-puzzle-exercise","title":"Parsons Puzzle Exercise","text":""},{"location":"api/exercise_format/#exercise_content","title":"exercise_content","text":"<p><pre><code>{\n\"list\": [\n\"&lt;piece 1&gt;\",\n\"&lt;piece 2&gt;\",\n...\n\"&lt;piece n&gt;\"\n]\n}\n</code></pre> example: <pre><code>\"exercise_content\": {\n\"list\": [\n\"Hello\",\n\"World\",\n\"this\",\n\"is\",\n\"the\",\n\"first\",\n\"exercise\"\n]\n}\n</code></pre> Note: When getting this via GET, the pieces will be randomized.</p>"},{"location":"api/exercise_format/#exercise_solution","title":"exercise_solution","text":"<p><pre><code>{\n\"list\": [\n\"&lt;piece 1&gt;\",\n\"&lt;piece 2&gt;\",\n...\n\"&lt;piece n&gt;\"\n]\n}\n</code></pre> example: <pre><code>\"exercise_solution\": {\n\"list\": [\n\"Hello\",\n\"World\",\n\"this\",\n\"is\",\n\"the\",\n\"first\",\n\"exercise\"\n]\n}\n</code></pre></p>"},{"location":"api/exercise_format/#solution_content","title":"solution_content","text":"<p><pre><code>{\n\"list\": [\n\"&lt;piece 1&gt;\",\n\"&lt;piece 2&gt;\",\n...\n\"&lt;piece n&gt;\"\n]\n}\n</code></pre> example: <pre><code>\"solution_content\": {\n\"list\": [\n\"Hello\",\n\"World\",\n\"this\",\n\"is\",\n\"the\",\n\"first\",\n\"exercise\"\n]\n}\n</code></pre></p>"},{"location":"api/exercise_format/#programming-exercise","title":"Programming Exercise","text":""},{"location":"api/exercise_format/#exercise_content_1","title":"exercise_content","text":"<p><pre><code>{\n\"code\": \"&lt;sample_code&gt;\",\n\"func\": \"&lt;function_name&gt;\"\n}\n</code></pre> <code>&lt;func_name&gt;</code> must be the name of the function to be called from the evaluator</p> <p>example: <pre><code>{\n\"exercise_content\": {\n\"code\": \"def multiply(x,y):\\r\\npass\",\n\"func\": \"multiply\"\n}\n}\n</code></pre></p>"},{"location":"api/exercise_format/#exercise_solution_1","title":"exercise_solution","text":"<p><pre><code>{\n\"0\": [[&lt;params&gt;],[&lt;result&gt;]],\n\"1\": [[&lt;params&gt;],[&lt;result&gt;]],\n...\n\"n\": [[&lt;params&gt;],[&lt;result&gt;]]\n}\n</code></pre> <code>params</code> should be a list of parameters, according to the expected data types of the executed function. <code>result</code> should be the expected output of the function (should also be a list).</p> <p>example: <pre><code>{\n\"exercise_solution\": {\n\"0\": [[0, 0], [0]],\n\"1\": [[1, 0], [0]],\n\"2\": [[1, 2], [2]],\n\"3\": [[2, 2], [4]],\n\"4\": [[6, 7], [42]],\n\"5\": [[-4, 5], [-20]],\n}\n}\n</code></pre></p>"},{"location":"api/exercise_format/#solution_content_1","title":"solution_content","text":"<p><pre><code>{\n\"code\": \"&lt;user_code&gt;\"\n}\n</code></pre> <code>&lt;user_code&gt;</code> should be the code the user submits</p> <p>example: <pre><code>{\n\"solution_content\": {\n\"code\": \"def multiply(x,y):\\r\\nreturn x*y\"\n}\n}\n</code></pre></p>"},{"location":"api/exercise_format/#gap-text-exercise","title":"Gap Text Exercise","text":""},{"location":"api/exercise_format/#exercise_content_2","title":"exercise_content","text":"<pre><code>{\n\"text\": \"&lt;exercise text&gt;\",\n\"gap_positions\": [\n&lt;pos 1&gt;,\n&lt;pos 2&gt;,\n...\n&lt;pos n&gt;\n]\n}\n</code></pre> <p>example: <pre><code>\"exercise_content\": {\n\"text\": \"This is a long code where something is missing, with some gaps.\",\n\"gap_positions\": [\n3,\n44,\n56\n]\n}\n</code></pre> <code>text</code> should be the exercsie text which should have the gaps inside. <code>gap_positions</code> should be a list of ints, with the char position of all gaps.</p>"},{"location":"api/exercise_format/#exercise_solution_2","title":"exercise_solution","text":"<p><pre><code>{\n\"gap_entries\": [\n\"&lt;gap 1&gt;\",\n\"&lt;gap 2&gt;\",\n...\n\"&lt;gap n&gt;\"\n]\n}\n</code></pre> <code>gap_entries</code> should be the a list of strings with the right gap fillings in the order of gap location.</p> <p>example: <pre><code>\"exercise_solution\": {\n\"gap_entries\": [\n\"These\",\n\"are\",\n\"the\",\n\"gap\",\n\"entries\"\n]\n}\n</code></pre></p>"},{"location":"api/exercise_format/#solution_content_2","title":"solution_content","text":"<p><pre><code>{\n\"gap_entries\": [\n\"&lt;gap 1&gt;\",\n\"&lt;gap 2&gt;\",\n...\n\"&lt;gap n&gt;\"\n]\n}\n</code></pre> <code>gap_entries</code> should be the a list of strings with the right gap fillings in the order of gap location.</p> <p>example: <pre><code>\"exercise_solution\": {\n\"gap_entries\": [\n\"These\",\n\"are\",\n\"the\",\n\"gap\",\n\"entries\"\n]\n}\n</code></pre></p>"},{"location":"api/login/","title":"Login API","text":"<p>The login route is the endpoint to perform the login authentication process. After the login is performed the client gets a session cookie.</p> <p>After the login process is done, the client has to send the session cookie with every HTTP request until logging out. (the cookie expires after one hour)</p> <p>The endpoint can be accessed at <code>&lt;address&gt;:&lt;port&gt;/login</code>.</p>"},{"location":"api/login/#post","title":"POST","text":"<p>The POST method is used to perform the login. It is the only request-type supported by the login route.</p>"},{"location":"api/login/#access","title":"Access","text":"<p>Python <code>requests</code>:</p> <pre><code>requests.request(\"POST\", \"http://&lt;address&gt;:&lt;port&gt;/login\", json=&lt;arguments&gt;, headers={\"Content-Type\": \"application/json\"})\n</code></pre> <p>Unix <code>curl</code>:</p> <pre><code>curl -X POST -d '&lt;arguments&gt;' -H \"Content-Type: application/json\" http://&lt;address&gt;:&lt;port&gt;/login\n</code></pre> <p>JavaScript <code>fetch</code>:</p> <pre><code>fetch(\"http://&lt;address&gt;:&lt;port&gt;/login\", {method: \"POST\", headers: {\"Content-Type\": \"application/json\"}, body: JSON.stringify(&lt;arguments&gt;)})\n</code></pre> <p>Replace <code>&lt;address&gt;</code> and <code>&lt;port&gt;</code> with your respective setup. Replace <code>&lt;arguments&gt;</code> with the arguments listed below.</p>"},{"location":"api/login/#arguments","title":"Arguments","text":"Argument Type Necessity Example Description <code>user_mail</code> <code>string</code> required <code>John Doe</code> The e-mail address of the user. <code>user_pass</code> <code>string</code> required <code>testPW</code> The user password as defined in the registration of the user account. <p>Arguments are constructed as dictionaries or JSON objects.</p>"},{"location":"api/login/#response","title":"Response","text":"200400401 <p>The response is a dictionary or JSON object. If authentication process succeeds a success message with a session cookie is returned with HTTP status 200.</p> <pre><code>{\n\"message\": \"Welcome John Doe!\",\n\"user_id\": 3,\n\"user_mail\": \"johnDoe@example.com\",\n\"user_name\": \"John Doe\",\n\"user_role_name\": \"User\",\n\"user_role_value\": 3\n}\n</code></pre> <p>A required argument was not sent.</p> <pre><code>{\n\"message\": {\n\"argument\": \"Error Text\"\n}\n}\n</code></pre> <p>Password or username is incorrect.</p> <pre><code>{\n\"message\": \"Incorrect user name or password\"\n}\n</code></pre>"},{"location":"api/logout/","title":"Logout API","text":"<p>The logout route is to perform a logout. The session cookie will be deleted. </p> <p>The endpoint can be accessed at <code>&lt;address&gt;:&lt;port&gt;/logout</code>.</p>"},{"location":"api/logout/#post","title":"POST","text":"<p>The POST method is used to perform the logout. It is the only request-type supported by the logout route.</p>"},{"location":"api/logout/#access","title":"Access","text":"<p>Python <code>requests</code>:</p> <pre><code>requests.request(\"POST\", \"http://&lt;address&gt;:&lt;port&gt;/logout\")\n</code></pre> <p>Unix <code>curl</code>:</p> <pre><code>curl --location --request POST 'http://&lt;address&gt;:&lt;port&gt;/logout'\n</code></pre> <p>JavaScript <code>fetch</code>:</p> <pre><code>fetch(\"http://&lt;address&gt;:&lt;port&gt;/logout\", {method: \"POST\"})\n</code></pre> <p>Replace <code>&lt;address&gt;</code> and <code>&lt;port&gt;</code> with your respective setup.</p>"},{"location":"api/logout/#arguments","title":"Arguments","text":"<p>No arguments are needed.</p>"},{"location":"api/logout/#response","title":"Response","text":"200 <p>Normally the response should be a 200 OK and a success message. It doesen't matter if the client was logged in before.</p> <pre><code>{\n\"message\": \"Successfully logged out.\"\n}\n</code></pre>"},{"location":"api/solution/","title":"Solution API","text":"<p>The solution route is the endpoint to perform all different kinds of operations on the solution database.</p> <p>The endpoint can be accessed at <code>&lt;address&gt;:&lt;port&gt;/solution</code>.</p>"},{"location":"api/solution/#get","title":"GET","text":"<p>The GET method is used to retrieve solution data based on attributes. This Method supports paging. Paging prevents overwhelming the API by reducing the number of returned elements. When a request is expected to return a huge number of elements, one can reduce the number of elements with the <code>solution_offset</code> and <code>solution_limit</code> arguments. <code>solution_offset</code> defines the lowest <code>solution_id</code> while <code>solution_limit</code> defines the number of elements in the page. The default value for <code>solution_limit</code> is defined in <code>config.MAX_ITEMS_RETURNED</code>. To get all values, simply execute multiple requests with adjusted values for <code>solution_offset</code>. If <code>solution_id</code> is provided <code>solution_offset</code> and <code>solution_limit</code> get ignored.</p>"},{"location":"api/solution/#access","title":"Access","text":"<p>Python <code>requests</code>:</p> <pre><code>requests.request(\"GET\", \"http://&lt;address&gt;:&lt;port&gt;/solution?&lt;URLarguments&gt;\")\n</code></pre> <p>Unix <code>curl</code>:</p> <pre><code>curl --location --request GET 'http://&lt;address&gt;:&lt;port&gt;/solution?&lt;URLarguments&gt;'\n</code></pre> <p>JavaScript <code>fetch</code>:</p> <pre><code>fetch(\"http://&lt;address&gt;:&lt;port&gt;/solution?&lt;URLarguments&gt;\", {method: \"GET\"})\n</code></pre> <p>Replace <code>&lt;address&gt;</code> and <code>&lt;port&gt;</code> with your respective setup. Replace <code>&lt;URLarguments&gt;</code> with key value pairs in the form <code>key=value</code>(key is the argument, example values are listed in the table below). Multiple arguments are separated with <code>&amp;</code>.</p>"},{"location":"api/solution/#arguments","title":"Arguments","text":"Argument Type Necessity Example Description <code>solution_id</code> <code>int</code> optional <code>1</code> The ID of the solution. Normally obtained after creating a new solution. This argument can be provided multiple times to select multiple solutions. All other arguments still apply. <code>solution_user</code> <code>int</code> optional <code>1</code> The ID of the user who provided the solution. <code>solution_exercise</code> <code>int</code> optional <code>1</code> The ID of the exercise which the solution was provided for. <code>solution_date</code> <code>int</code> optional <code>1672946590</code> The date and time when the solution attempt was started. Encoded as Unix timestamp. As querring for a specific timestamp, the system queries for all solutions which have the same year, month and date <code>solution_date</code>. <code>solution_duration</code> <code>int</code> optional <code>524</code> The time the user needed to solve the exercise. Encoded in seconds. <code>solution_correct</code> <code>bool</code> optional <code>true</code> Whether the solution solves the exercise correctly or not. <code>solution_pending</code> <code>bool</code> optional <code>false</code> Whether the solution is in pending state. Pending state means an admin needs to evaluate the solution. <code>solution_content</code> <code>dict</code> optional <code>{\"list\": [\"Hello\", \"World\", \"this\", \"is\", \"the\", \"first\", \"exercise\"]}</code> A JSON object or dict, containing the solution attempt. The encoding is <code>exercise_type</code>-specific. Querring for the solution content is quite useless but this field is added for completeness. <code>solution_page</code> <code>int</code> optional <code>1</code> The page of the query result. Default value is 1. <code>solution_limit</code> <code>int</code> optional <code>1</code> The size of the page. If a page is requested and <code>solution_limit</code> is not set <code>config.MAX_ITEMS_RETURNED</code> gets used as default value. <p>Arguments are constructed as dictionaries or JSON objects.</p>"},{"location":"api/solution/#response","title":"Response","text":"<p>NOTE: It is possible that the system returns up to <code>Config.MAX_ITEMS_RETURNED</code> items.</p> 200204400401403 <p>The response is a dictionary of JSON object. <code>\"data\"</code> is mapped to the query result as a list. <code>\"meta\"</code> is mapped to the meta data.</p> <p>Response structure: | Field | Description | |:--|:--| | <code>\"data\"</code> | A list of the elements returned by the query ordered by <code>exercise_id</code>. | | <code>\"next_page\"</code> | The index of the next page. If there is no next page this value will be <code>null</code>. | | <code>\"next_url\"</code> | The URL to request the next page. If there is no next page this value will be <code>null</code>. | | <code>\"page_size\"</code> | The number of elements in the current page. | | <code>\"pages\"</code> | The number of pages. | | <code>\"prev_page\"</code> | The index of the previous page. If the is no previous page this value will be <code>null</code>. | | <code>\"prev_url\"</code> | The URL to request the previous page. If there is no previous page this value will be <code>null</code>. | | <code>\"total\"</code> | The total number of elements which match the query. Basically the sum of all page sizes. |</p> <pre><code>{\n\"data\": [\n{\n\"solution_correct\": true,\n\"solution_date\": \"2023-01-11 15:16:25\",\n\"solution_duration\": \"122 days, 0:00:00\",\n\"solution_exercise\": 1,\n\"solution_id\": 2,\n\"solution_user\": 1,\n\"solution_pending\": false,\n\"solution_content\": &lt;...&gt;\n}\n],\n\"meta\": {\n\"next_page\": null,\n\"next_url\": null,\n\"page_size\": 1,\n\"pages\": 1,\n\"prev_page\": null,\n\"prev_url\": null,\n\"total\": 1\n}\n}\n</code></pre> <p>The database query yielded no results with the given parameters. The response body is empty.</p> <p>The <code>solution_limit</code> is out of range, e.g. grater then <code>config.MAX_ITEMS_RETURNED</code>. <pre><code>{\n\"message\": \"Page limit not in range\",\n\"min_limit\": &lt;min_value&gt;,\n\"max_limit\": &lt;max_value&gt;\n}\n</code></pre></p> <p>The request contains no cookie. <pre><code>{\n\"message\": \"Login required\"\n}\n</code></pre></p> <p>The cookie does not represent the necessary privileges. Mostly this is because a request with a user token tries to perform an admin only task. <pre><code>{\n\"message\": \"No Access\"\n}\n</code></pre></p>"},{"location":"api/solution/#post","title":"POST","text":"<p>The post method is used to create new solutions.</p>"},{"location":"api/solution/#access_1","title":"Access","text":"<p>Python <code>requests</code>:</p> <pre><code>requests.request(\"POST\", \"http://&lt;address&gt;:&lt;post&gt;/solution\", json=&lt;arguments&gt;, headers={\"Content-Type\": \"application/json\"})\n</code></pre> <p>Unix <code>curl</code>:</p> <pre><code>curl --location --request GET 'http://&lt;address&gt;:&lt;port&gt;/solution' \\\n--header 'Content-Type: application/json' \\\n--header 'Cookie: token=&lt;token&gt;' \\\n--data-raw '{\n    &lt;arguments&gt;\n}'\n</code></pre> <p>JavaScript <code>fetch</code>:</p> <pre><code>fetch(\"http://&lt;address&gt;:&lt;port&gt;/solution\", {method: \"POST\", headers={\"Content-Type\": \"application/json\", \"Cookie\": \"token=&lt;token&gt;\"}, body: JSON.stringify(&lt;arguments&gt;)})\n</code></pre> <p>Replace <code>&lt;address&gt;</code> and <code>&lt;port&gt;</code> with your respective setup. Replace <code>&lt;arguments&gt;</code> with the arguments listed below. The structure is a dictionary or JSON object. Replace <code>&lt;token&gt;</code> with the JWT.</p>"},{"location":"api/solution/#arguments_1","title":"Arguments","text":"Argument Type Necessity Example Description <code>solution_exercise</code> <code>int</code> required <code>1</code> The ID of the exercise which the solution was provided for. <code>solution_date</code> <code>int</code> required <code>1672946590</code> The date and time when the solution attempt was started. Encoded as Unix timestamp. <code>solution_duration</code> <code>int</code> required <code>524</code> The time the user needed to solve the exercise. Encoded in seconds. <code>solution_content</code> <code>dict</code> required <code>{\"list\": [\"Hello\", \"World\", \"this\", \"is\", \"the\", \"first\", \"exercise\"]}</code> A JSON object or dict, containing the solution attempt. The encoding is <code>exercise_type</code>-specific. <p>Arguments are constructed as dictionaries or JSON objects.</p>"},{"location":"api/solution/#response_1","title":"Response","text":"201400401403500 <p>The response is a dictionary or JSON object, together with the HTTP status 201. All attributes of the created solution will be shown, together with a response message. The attribute evaluator_message contains a response message from the automatic solution evaluation. <pre><code>{\n\"evaluator_message\": [\n\"Successfully passed all Tests\"\n],\n\"message\": \"Successfully submitted solution\",\n\"solution_content\": &lt;...&gt;\n\"solution_correct\": true,\n\"solution_date\": \"Sun, 05 Feb 2023 19:32:30 GMT\",\n\"solution_duration\": 524,\n\"solution_exercise\": 7,\n\"solution_id\": 15,\n\"solution_pending\": false,\n\"solution_user\": 1\n}\n</code></pre></p> <p>If a required argument was not send: <pre><code>{\n\"message\": {\n\"argument\": \"Error Text\"\n}\n}\n</code></pre></p> <p>If no session cookie was provided: <pre><code>{\n\"message\": \"Login required\"\n}\n</code></pre></p> <p>If an unauthorized client sends a request: <pre><code>{\n\"message\": \"No Access\"\n}\n</code></pre></p> <p>If for some reason the element could not be added to the database: <pre><code>{\n\"message\": \"An error occurred while creating the solution\"\n}\n</code></pre></p>"},{"location":"api/solution/#put","title":"PUT","text":"<p>The put method is used to change attributes of an existing solution.</p>"},{"location":"api/solution/#access_2","title":"Access","text":"<p>Python <code>requests</code>:</p> <pre><code>requests.request(\"PUT\", \"http://&lt;address&gt;:&lt;port&gt;/solution\", json=&lt;arguments&gt;, headers={\"Content-Type\": \"application/json\", \"Cookie\": \"token=&lt;token&gt;\"})\n</code></pre> <p>Unix <code>curl</code>:</p> <pre><code>curl --location --request PUT 'http://&lt;address&gt;:&lt;port&gt;/solution' \\\n--header 'Content-Type: application/json' \\\n--header 'Cookie: token=&lt;token&gt;' \\\n--data-raw '{\n    &lt;arguments&gt;\n}'\n</code></pre> <p>JavaScript <code>fetch</code>:</p> <pre><code>fetch(\"http://&lt;address&gt;:&lt;port&gt;/solution\", {method: \"PUT\", headers={\"Content-Type\": \"application/json\", \"Cookie\": \"token=&lt;token&gt;\"}, body: JSON.stringify(&lt;arguments&gt;)})\n</code></pre> <p>Replace <code>&lt;address&gt;</code> and <code>&lt;port&gt;</code> with your respective setup. Replace <code>&lt;arguments&gt;</code> with the arguments listed below. The structure is a dictionary or JSON object. Replace <code>&lt;token&gt;</code> with the JWT.</p>"},{"location":"api/solution/#arguments_2","title":"Arguments","text":"Argument Type Necessity Example Description <code>solution_id</code> <code>int</code> required <code>1</code> The ID of the solution. Normally obtained after creating a new solution. <code>solution_exercise</code> <code>int</code> optional <code>1</code> The ID of the exercise which the solution was provided for. <code>solution_date</code> <code>int</code> optional <code>1672946590</code> The date and time when the solution attempt was started. Encoded as Unix timestamp. <code>solution_duration</code> <code>int</code> optional <code>524</code> The time the user needed to solve the exercise. Encoded in seconds. <code>solution_correct</code> <code>bool</code> optional <code>true</code> Whether the solution solves the exercise correctly or not. <code>solution_pending</code> <code>bool</code> optional <code>false</code> Whether the solution is in pending state or not. <code>solution_content</code> <code>dict</code> optional <code>{\"list\": [\"Hello\", \"World\", \"this\", \"is\", \"the\", \"first\", \"exercise\"]}</code> A JSON object or dict, containing the solution attempt. The encoding is <code>exercise_type</code>-specific. <p>Arguments are constructed as dictionaries or JSON objects.</p>"},{"location":"api/solution/#response_2","title":"Response","text":"200400401403404 <p>The response is a dictionary or JSON object, together with HTTP status 200. The response contains a message. <pre><code>{\n\"message\": \"The solution with solution_id 1 was changed successfully.\"\n}\n</code></pre></p> <p>If a required argument was not sent: <pre><code>{\n\"message\": {\n\"argument\": \"Error Text\"\n}\n}\n</code></pre></p> <p>If no session cookie was provided: <pre><code>{\n\"message\": \"Login required\"\n}\n</code></pre></p> <p>If an unauthorized client sent a request: <pre><code>{\n\"message\": \"No Access\"\n}\n</code></pre></p> <p>If no solution with the given <code>solution_id</code> exists: <pre><code>{\n\"message\": \"Solution with solution_id 1 does not exist\"\n}\n</code></pre></p>"},{"location":"api/solution/#delete","title":"DELETE","text":"<p>The delete method is used to delete an existing solution.</p>"},{"location":"api/solution/#access_3","title":"Access","text":"<p>Python <code>requests</code>:</p> <pre><code>requests.request(\"PUT\", \"http://&lt;address&gt;:&lt;port&gt;/solution\", json=&lt;arguments&gt;, headers={\"Content-Type\": \"application/json\", \"Cookie\": \"token=&lt;token&gt;\"})\n</code></pre> <p>Unix <code>curl</code>:</p> <pre><code>curl --location --request PUT 'http://&lt;address&gt;:&lt;port&gt;/solution' \\\n--header 'Content-Type: application/json' \\\n--header 'Cookie: token=&lt;token&gt;' \\\n--data-raw '{\n    &lt;arguments&gt;\n}'\n</code></pre> <p>JavaScript <code>fetch</code>:</p> <pre><code>fetch(\"http://&lt;address&gt;:&lt;port&gt;/solution\", {method: \"PUT\", headers={\"Content-Type\": \"application/json\", \"Cookie\": \"token=&lt;token&gt;\"}, body: JSON.stringify(&lt;arguments&gt;)})\n</code></pre> <p>Replace <code>&lt;address&gt;</code> and <code>&lt;port&gt;</code> with your respective setup. Replace <code>&lt;arguments&gt;</code> with the arguments listed below. The structure is a dictionary or JSON object. Replace <code>&lt;token&gt;</code> with the JWT.</p>"},{"location":"api/solution/#arguments_3","title":"Arguments","text":"Argument Type Necessity Example Description <code>solution_id</code> <code>int</code> required <code>1</code> The ID of the solution. Normally obtained after creating a new solution. <p>Arguments are constructed as dictionaries or JSON objects.</p>"},{"location":"api/solution/#response_3","title":"Response","text":"200400401403404 <p>The response is a dictionary of JSON object, together with HTTP status 200. The response contains a message. <pre><code>{\n\"message\": \"The solution with the solution_id 1 was deleted successfully\"\n}\n</code></pre></p> <p>If a required argument was not sent: <pre><code>{\n\"message\": {\n\"argument\": \"Error Text\"\n}\n}\n</code></pre></p> <p>If no session cookie was provided: <pre><code>{\n\"message\": \"Login required\"\n}\n</code></pre></p> <p>If an unauthorized clients sends a request: <pre><code>{\n\"message\": \"No Access\"\n}\n</code></pre></p> <p>If no solution with the given <code>solution_id</code> exists: <pre><code>{\n\"message\": \"Solution with the solution_id 1 does no exist\"\n}\n</code></pre></p>"},{"location":"api/user/","title":"User API","text":"<p>The user route is the endpoint to perform all different kinds of operations on the user database. The endpoint can be accessed at <code>&lt;address&gt;:&lt;port&gt;/user</code>.</p>"},{"location":"api/user/#get","title":"GET","text":"<p>The GET method is used to retrieve user data based on attributes. This method supports paging. Paging prevents overwhelming the API by reducing the number of returned elements. When a request is expected to return a huge number of elements, one can reduce the number of elements with the <code>user_offset</code> and <code>user_limit</code> arguments. <code>user_offset</code> defines the lowest <code>user_id</code> while <code>user_limit</code> defines the number of elements in the page. The default value for <code>user_limit</code> is defined in <code>config.MAX_ITEMS_RETURNED</code>. To get all values, simply execute multiple requests with adjusted values for <code>user_offset</code>. If <code>user_id</code> is provided <code>user_offset</code> and <code>user_limit</code> get ignored.</p>"},{"location":"api/user/#access","title":"Access","text":"<p>Python <code>requests</code>:</p> <pre><code>requests.request(\"GET\", \"http://&lt;address&gt;:&lt;port&gt;/user?&lt;URLarguments&gt;\")\n</code></pre> <p>Unix <code>curl</code>:</p> <pre><code>curl --location --request GET 'http://&lt;address&gt;:&lt;port&gt;/user?&lt;URLarguments&gt;'\n</code></pre> <p>JavaScript <code>fetch</code>:</p> <pre><code>fetch(\"http://&lt;address&gt;:&lt;port&gt;/user?&lt;URLarguments&gt;\", {method: \"GET\"})\n</code></pre> <p>Replace <code>&lt;address&gt;</code> and <code>&lt;port&gt;</code> with your respective setup. Replace <code>&lt;URLarguments&gt;</code> with key value pairs in the form <code>key=value</code>(key is the argument, example values are listed in the table below). Multiple arguments are separated with <code>&amp;</code>.</p>"},{"location":"api/user/#arguments","title":"Arguments","text":"<p>Arguments are constructed as dictionaries or JSON objects.</p> Argument Type Necessity Example Description <code>user_id</code> <code>int</code> optional <code>1</code> The ID of the user. Normally obtained after creating a new user. This argument can be provided multiple times to select multiple users. All other arguments still apply. <code>user_name</code> <code>string</code> optional <code>John Doe</code> The name of the user. Uniqueness is not guaranteed. <code>user_mail</code> <code>string</code> optional <code>john.doe@example.com</code> The e-mail address of the user. This is unique for every account. <code>user_role</code> <code>int</code> optional <code>1</code> An integer defining the user role. One of the following values: <code>1</code> for super admin, <code>2</code> for admin and <code>3</code> for regular users. <code>user_page</code> <code>int</code> optional <code>1</code> The page if the query result. Default value is 1. <code>user_limit</code> <code>int</code> optional <code>1</code> The size of a page. If a page is requested and <code>user_limit</code> is not set <code>config.MAX_ITEMS_RETURNED</code> gets used as default value. <p>Note: If no argument is sent, the system returns the user data of the logged in client (not as dict).</p>"},{"location":"api/user/#response","title":"Response","text":"<p>NOTE: It is possible that the system returns up to <code>Config.MAX_ITEMS_RETURNED</code> items.</p> 200204400401403 <p>The response is a dictionary of JSON object. <code>\"data\"</code> is mapped to the query result as a list. <code>\"meta\"</code> is mapped to the meta data.</p> <p>Response structure: | Field | Description | |:--|:--| | <code>\"data\"</code> | A list of the elements returned by the query ordered by <code>user_id</code>. | | <code>\"next_page\"</code> | The index of the next page. If there is no next page this value will be <code>null</code>. | | <code>\"next_url\"</code> | The URL to request the next page. If there is no next page this value will be <code>null</code>. | | <code>\"page_size\"</code> | The number of elements in the current page. | | <code>\"pages\"</code> | The number of pages. | | <code>\"prev_page\"</code> | The index of the previous page. If the is no previous page this value will be <code>null</code>. | | <code>\"prev_url\"</code> | The URL to request the previous page. If there is no previous page this value will be <code>null</code>. | | <code>\"total\"</code> | The total number of elements which match the query. Basically the sum of all page sizes. |</p> <p><pre><code>{\n\"data\": [\n{\n\"exercise_id\": 1,\n\"user_name\": \"John Doe\",\n\"user_mail\": \"john.doe@example.com\",\n\"user_role_name\": \"User\",\n\"user_role_value\": 3\n}\n],\n\"meta\": {\n\"next_page\": null,\n\"next_url\": null,\n\"page_size\": 1,\n\"pages\": 1,\n\"prev_page\": null,\n\"prev_url\": null,\n\"total\": 1\n}\n}\n</code></pre> If no argument is sent the response is not mapped to the <code>user_id</code>:</p> <pre><code>{\n\"user_id\": 1,\n\"user_name\": \"John Doe\",\n\"user_mail\": \"john.doe@example.com\",\n\"user_role_name\": \"User\",\n\"user_role_value\": 3\n}\n</code></pre> <p>The database query yielded no results with the given parameters. The response body is empty.</p> <p>The <code>user_limit</code> is out of range, e.g. grater then <code>config.MAX_ITEMS_RETURNED</code>.</p> <pre><code>{\n\"message\": \"Page limit not in range\",\n\"min_limit\": \"&lt;min_value&gt;\",\n\"max_limit\": \"&lt;max_value&gt;\"\n}\n</code></pre> <p>No session cookie was provided.</p> <pre><code>{\n\"message\": \"Login required\"\n}\n</code></pre> <p>An unauthorized client send a request.</p> <pre><code>{\n\"message\": \"No Access\"\n}\n</code></pre>"},{"location":"api/user/#post","title":"POST","text":"<p>The POST method is used to create a new user. This method prevents duplication.</p>"},{"location":"api/user/#access_1","title":"Access","text":"<p>No Authorizazion is needed. So this method can be accessed without sending a cookie.</p> <p>Python <code>requests</code>:</p> <pre><code>requests.request(\"POST\", \"http://&lt;address&gt;:&lt;port&gt;/user\",json=&lt;arguments&gt;,headers={\"Content-Type\": \"application/json\"})\n</code></pre> <p>Unix <code>curl</code>:</p> <pre><code>curl --location --request POST 'http://&lt;adress&gt;:&lt;port&gt;/user' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    &lt;arguments&gt;\n}'\n</code></pre> <p>JavaScript <code>fetch</code>:</p> <pre><code>fetch(\"http://&lt;address&gt;:&lt;port&gt;/user\", {method: \"POST\", headers: {\"Content-Type\": \"application/json\"}, body: JSON.stringify(&lt;arguments&gt;)})\n</code></pre> <p>Replace <code>&lt;address&gt;</code> and <code>&lt;port&gt;</code> with your respective setup. Replace <code>&lt;arguments&gt;</code> with the arguments listed below. (in curl in key value pairs <code>\"&lt;key&gt;\": \"&lt;value&gt;\"</code>)</p>"},{"location":"api/user/#arguments_1","title":"Arguments","text":"Argument Type Necessity Example Description <code>user_name</code> <code>string</code> required <code>John Doe</code> The name of the user. Uniqueness is guaranteed. <code>user_pass</code> <code>int</code> required <code>testPW</code> The password of the new user. <code>user_mail</code> <code>string</code> required <code>john.doe@example.com</code> The e-mail address of the user. This is unique for every account."},{"location":"api/user/#response_1","title":"Response","text":"201409500 <p>The response is a dictionary or JSON object, Together with HTTP status 201. New user's name and id will be returned, together with a response message.</p> <pre><code>{\n\"message\": \"The user was created successfully\",\n\"user_name\": \"John Doe\",\n\"user_id\": 1\n}\n</code></pre> <p>The request contains already existing user name or email.</p> <pre><code>{\n\"message\": \"A user with this name already exists\"\n}\n</code></pre> <p>The user could not be added to the database for some reason.</p> <pre><code>{\n\"message\": \"An error occurred while creating the user\"\n}\n</code></pre>"},{"location":"api/user/#put","title":"PUT","text":""},{"location":"api/user/#access_2","title":"Access","text":"<p>Python <code>requests</code>:</p> <pre><code>requests.request(\"PUT\", \"http://&lt;address&gt;:&lt;port&gt;/exercise\", json=&lt;arguments&gt;, headers={\"Content-Type\": \"application/json\"})\n</code></pre> <p>Unix <code>curl</code>:</p> <pre><code>curl --location --request PUT 'http://&lt;adress&gt;:&lt;port&gt;/user' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    &lt;arguments&gt;\n}'\n</code></pre> <p>JavaScript <code>fetch</code>:</p> <pre><code>fetch(\"http://&lt;address&gt;:&lt;port&gt;/user\", {method: \"PUT\", headers: {\"Content-Type\": \"application/json\"}, body: JSON.stringify(&lt;arguments&gt;)})\n</code></pre> <p>Replace <code>&lt;address&gt;</code> and <code>&lt;port&gt;</code> with your respective setup. Replace <code>&lt;arguments&gt;</code> with the arguments listed below. (in curl in key value pairs <code>\"&lt;key&gt;\": \"&lt;value&gt;\"</code>)</p> <p>TODO: Arguments and response</p>"},{"location":"api/user/#delete","title":"DELETE","text":""},{"location":"api/user/#access_3","title":"Access","text":"<p>Python <code>requests</code>:</p> <pre><code>requests.request(\"DELETE\", \"http://&lt;address&gt;:&lt;port&gt;/exercise\", json=&lt;arguments&gt;, headers={\"Content-Type\": \"application/json\"})\n</code></pre> <p>Unix <code>curl</code>:</p> <pre><code>curl --location --request PUT 'http://&lt;adress&gt;:&lt;port&gt;/user' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    &lt;arguments&gt;\n}'\n</code></pre> <p>JavaScript <code>fetch</code>:</p> <pre><code>fetch(\"http://&lt;address&gt;:&lt;port&gt;/user\", {method: \"DELETE\", headers: {\"Content-Type\": \"application/json\"}, body: JSON.stringify(&lt;arguments&gt;)})\n</code></pre> <p>Replace <code>&lt;address&gt;</code> and <code>&lt;port&gt;</code> with your respective setup. Replace <code>&lt;arguments&gt;</code> with the arguments listed below. (in curl in key value pairs <code>\"&lt;key&gt;\": \"&lt;value&gt;\"</code>)</p> <p>TODO: Arguments and response</p>"},{"location":"manuals/administrators/","title":"Administrator manual","text":""},{"location":"manuals/administrators/#log-in","title":"Log-In","text":"<p>If you are on the starting page click on the <code>START NOW</code> button to log in an existing account or to create a new one. By default the database provides two accounts: tuser and sadmin (credentials of sadmin can be found in the documentation in api/config). Since our Log in system works with cookies, you're able to stay logged in even if you close your browser (the cookie disappears after one hour inaktivity).</p>"},{"location":"manuals/administrators/#admin-dashboard","title":"Admin Dashboard","text":"<p>If you successfully logged in, you should see the admin dashboard. You might need  to reload the page to be able to scroll. On the top right you can see the your  username. By clicking on that, a dropdown menu opens where you can change the theme,  view your profile and log out. On the dashboard itself, 5 buttons exist. You can:</p> <ol> <li> <p>List all existing users</p> </li> <li> <p>List all existing exercises</p> </li> <li> <p>Add an exercise</p> </li> <li> <p>Add a user</p> </li> <li> <p>Show all submitted solutions</p> </li> </ol>"},{"location":"manuals/administrators/#add-exercise","title":"Add Exercise","text":"<p>At the moment only two exercise-types work:</p> <ol> <li> <p>Parsons-Puzzle</p> <ul> <li>to create a Parsons-Puzzle click on <code>ADD EXERCISE</code> and <code>Parsons Puzzle</code></li> <li>you can provide a title, a description in Markdown format and different pieces (Python code will be syntax-highlighted)</li> <li>be sure to provide the pieces in the right order as this will be the solution to your exercise</li> <li>if you are done, click <code>SUBMIT NEW EXERCISE</code> and then <code>BACK TO OVERVIEW</code></li> <li>you now should see the exercise in the exercise list</li> </ul> </li> <li> <p>Free Coding Exercise</p> <ul> <li>to create a Free Coding Exercise click on <code>ADD EXERCISE</code> and <code>Free Coding Exercise</code></li> <li>you can provide a title, a description in Markdown, sample code, some test cases and the function name of the function that should be executed by our system</li> <li>you can add several test cases with input parameters and expected output (at the moment only integers work as input and output)</li> <li>if you are done click <code>SUBMIT NEW EXERCISE</code> and return to the base URL</li> <li>you now should see the exercise in the exercise list</li> </ul> </li> </ol>"},{"location":"manuals/administrators/#add-user","title":"Add User","text":"<p>The admin dashboard provides the functionality to add new user accounts. Just fill in the register form.</p>"},{"location":"manuals/administrators/#list-users","title":"List Users","text":"<p>To list all existing accounts click on the <code>list all users</code> button. Clicking on a user leads you to the profile page of this user.</p>"},{"location":"manuals/administrators/#solve-an-exercise","title":"Solve an exercise","text":"<p>To solve exercises click on the exercise list, choose an exercise and click on it. The symbol in the exercise list provides you the exercise type. Now you can solve the chosen exercise. The solving time will be measured. If you click on <code>SUBMIT</code> our system will automatically evaluate your solution. If you're done click <code>BACK To OVERVIEW</code>. Your solution attempts are displayed at the solution list.</p>"},{"location":"manuals/administrators/#show-solutions","title":"Show Solutions","text":"<p>To see a list of all solutions click on <code>SHOW ALL SOLUTIONS</code>.</p>"},{"location":"manuals/administrators/#log-out","title":"Log Out","text":"<p>To Log out click on your user-name on the top-right, then a dropdown menu opens. There you can click on <code>Logout</code>.</p>"},{"location":"manuals/users/","title":"User manual","text":""},{"location":"meetings/SE-PM1/","title":"SE PM1","text":"<p>Links:  [[SE]]</p> <p>Attending:  - Sami, Martin, Konstatin, Max, Simon, Jana, Louis, Andy</p>","tags":["meeting","SoftwareEngineering","Lab"]},{"location":"meetings/SE-PM1/#goals","title":"Goals:","text":"<ul> <li>Decide on Project manager</li> <li>Pick regular meeting time</li> <li>Kennenlernen Runde</li> </ul>","tags":["meeting","SoftwareEngineering","Lab"]},{"location":"meetings/SE-PM1/#notes","title":"Notes:","text":"","tags":["meeting","SoftwareEngineering","Lab"]},{"location":"meetings/SE-PM1/#skills-and-interests","title":"Skills and Interests:","text":"","tags":["meeting","SoftwareEngineering","Lab"]},{"location":"meetings/SE-PM1/#louis-manager","title":"Louis (Manager)","text":"<ul> <li>a Bit of C</li> <li>Java (Datenstrukturen)</li> <li>Python (Medium)</li> <li>A bit CSS</li> <li>Gut in Mathe</li> <li>Backend</li> </ul>","tags":["meeting","SoftwareEngineering","Lab"]},{"location":"meetings/SE-PM1/#andy","title":"Andy:","text":"<ul> <li>Python, bissl java</li> <li>Frontend: REACT und Svelte</li> <li>Backend: Node.js</li> </ul>","tags":["meeting","SoftwareEngineering","Lab"]},{"location":"meetings/SE-PM1/#jana","title":"Jana","text":"<ul> <li>Knows about hosting.</li> <li>Java, bissle python. </li> <li>A bit of CSS</li> <li>Design skills</li> </ul>","tags":["meeting","SoftwareEngineering","Lab"]},{"location":"meetings/SE-PM1/#simon","title":"Simon","text":"<ul> <li>Python</li> <li>REACT.js (HTML, CSS)</li> <li>Frontend</li> </ul>","tags":["meeting","SoftwareEngineering","Lab"]},{"location":"meetings/SE-PM1/#konsti","title":"Konsti","text":"<ul> <li>Python </li> <li>Java (Datenstrukturen)</li> <li>Frontend (Design skills, Photoshop etc..)</li> <li>PYQT</li> </ul>","tags":["meeting","SoftwareEngineering","Lab"]},{"location":"meetings/SE-PM1/#martin","title":"Martin","text":"<ul> <li>Python</li> <li>C++</li> <li>Java (Datenstrukturen)</li> <li>Backend (Login system, Code Checks)</li> </ul>","tags":["meeting","SoftwareEngineering","Lab"]},{"location":"meetings/SE-PM1/#max","title":"Max:","text":"<ul> <li>Python (KI a lot)</li> <li>LateX</li> <li>DuckDuckGo Master</li> </ul>","tags":["meeting","SoftwareEngineering","Lab"]},{"location":"meetings/SE-PM1/#sami","title":"Sami:","text":"<ul> <li>C++ (OOP)</li> <li>Bock Python zu lernen</li> <li>Frontend Erfahrung (CSS, HTML)</li> <li>Some JS</li> </ul>","tags":["meeting","SoftwareEngineering","Lab"]},{"location":"meetings/SE-PM1/#to-do","title":"To-Do:","text":"<ul> <li>[x] Meeting with Kunde \u2705 2022-11-02</li> <li>[x] Set the goals for the project \u2705 2022-11-02</li> <li>[x] Assign the rest of the roles \u2705 2022-11-02</li> </ul>","tags":["meeting","SoftwareEngineering","Lab"]},{"location":"meetings/SE-PM1/#respources","title":"Respources:","text":"<ul> <li>Aufgabenstellung: ![[Softwaretechnik_Praktikum_Aufgabenstellung.pdf]]</li> </ul>","tags":["meeting","SoftwareEngineering","Lab"]},{"location":"meetings/SE-PM2/","title":"SE PM2","text":"<p>Links:  [[SE]]</p> <p>Attending:  - All </p>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM2/#goals","title":"Goals:","text":"<ul> <li>Kundengespr\u00e4ch updates</li> <li>First steps to a working Web App</li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM2/#notes","title":"Notes:","text":"<ul> <li>Programm = 20% der Note</li> <li>Teamwork and project management / presentations = 80%</li> <li>Web App, no nead to publish</li> <li>No need for sick details or complex program</li> <li>=&gt; Ziel: funktionalit\u00e4t </li> <li>Eine Aufgabe nach der anderen</li> <li>Steps:<ul> <li>Login System (Shibboleth) = The OPAL webtrust thing</li> </ul> </li> <li> <p>Note down technical problems =&gt; Feedback to our teamwork</p> </li> <li> <p>1st Meilenstein:</p> <ul> <li>SnowCards abgeben, and everything else we did.</li> </ul> </li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM2/#snowcards-groups","title":"Snowcards Groups:","text":"<ul> <li>Login: Andy &amp; Jana</li> <li>Aufgabensystem: Sami &amp; Simon</li> <li>Auswertungssystem: Martin &amp; Konsti</li> <li>Administrationssystem: Max &amp; Louis</li> </ul> <p>mindestens zwei funktionale und eine nicht funktionale Anforderung pro Aufgabenteil.</p>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM2/#to-do","title":"To-Do:","text":"<ul> <li>[x] Datenbank? SQL Alchemy \u2705 2022-11-16</li> <li>[x] Framework for backend? Flask \u2705 2022-11-16</li> <li>[x] Framework for Frontend? (Svelte or React) \u2705 2022-11-16</li> <li>[x] Finish Snowcards \u2705 2022-11-16</li> <li>[x] Decide on Platform name \u2705 2022-11-16</li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM2/#respources","title":"Respources:","text":"<p>[[STP_Meilenstein1.pdf]]</p>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM2/#decisions","title":"Decisions:","text":"","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM2/#roles","title":"Roles:","text":"<ul> <li>Snow cards groups assigned</li> <li>Max: Software Architect</li> <li>Louis: Scrum Master</li> <li>Sami: Prodect Owner</li> <li>All others (Developers):<ul> <li>Testers</li> <li>Frontend</li> <li>Backend</li> <li>etc...</li> </ul> </li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM2/#workflow","title":"Workflow:","text":"<ul> <li>We use SCRUM</li> <li>GIT Repo: https://github.com/mlinke-ai/kev.in</li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM3/","title":"SE PM3","text":"<p>Links:  [[SE]]</p> <p>Attending:  - All </p>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM3/#login-id1","title":"Login (id=1)","text":"<ul> <li>Loginbutton</li> <li>Forwarding Prozess nach einloggen (Weiterleiten nach Shibolet) </li> <li>nach Einloggen Daten f\u00fcr den jeweiligen Nutzer bereitstellen </li> <li>(Passwort vergessen Funktion) </li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM3/#nf","title":"NF","text":"<ul> <li>Button zum Login schnell zu finden und gut zu finden</li> <li>es soll gut aussehen </li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM3/#aufgabenauswertung-id2","title":"Aufgabenauswertung (id=2)","text":"<ul> <li>korrekt oder falsch Bewertung nach Abgabe </li> <li>Ergebnis wird in Datenbank abgespeichert </li> <li>m\u00f6gliche L\u00f6sung (Musterl\u00f6sung) </li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM3/#nf_1","title":"NF","text":"<ul> <li>kein Absturz in 99% der F\u00e4lle bei komischen Eingaben </li> <li>innerhalb von einer Sekunde Ergebnis evaluieren </li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM3/#aufgabensystem-id3","title":"Aufgabensystem (id=3)","text":"<ul> <li>Aufgaben filtern </li> <li>hints bei den Aufgaben </li> <li>mitloggen von bestimmten Metriken (z.B Bearbeitungszeit) --&gt; Auswertungsystem kann bei Metriken anzeigen das als dependency angeben </li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM3/#nf_2","title":"NF","text":"<ul> <li>security </li> <li>Syntax highlighting (python Java)</li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM3/#administratorsystem-id4","title":"Administratorsystem (id=4)","text":"<ul> <li>kein Zugriff auf bestimmte Nutzerdaten</li> <li>Einsicht in bestimmte Metriken (Konflikt mit erstem Punkt) </li> <li>Admin soll Aufgaben zu erstellen </li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM3/#nf_3","title":"NF","text":"<ul> <li>intuitive Benutzung </li> <li>System Performance, max 1000ms Latenz id aus zwei teilen erst system, dann id innerhalb des systems (evtl. noch zwischen funktional und nicht funktional unterteilen)</li> </ul> <ul> <li>id Format: event.req (z.B 1.5) deadline Abgabe Snowcards an Max: 13.11.2022</li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM4/","title":"SE PM4","text":"<p>Links:  [[SE]]</p> <p>Attending:  - All but Jana</p>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM4/#goals","title":"Goals:","text":"<ul> <li>Presentation setup</li> <li>Project setup</li> <li>Workflow to build platform</li> <li>Login system decision</li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM4/#notes","title":"Notes:","text":"","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM4/#project-setup","title":"Project Setup:","text":"<ul> <li>Simon: Svelte Frontend repo =&gt; Pages as Folders </li> <li>Components in Lib </li> <li>Consti: Github repo for connecting frontend &amp; backend \"Server.py\" ((Flask &amp; Svelte))</li> <li>COOP: Components </li> <li>2-Teams</li> <li>Mockup? logo? </li> <li>Logging from FreeCodeCamp - Martin </li> <li>shibboleth       Possibility to distinguish between admins and users.</li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM4/#login-system","title":"Login System:","text":"<p>Responsibles: Martin, Sami, Max (Backend) Rest (Frontend Login)</p> FreeCodeCamp Shibboleth Simple Secure Could be done by the weekend a little more work","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM4/#workflow","title":"Workflow:","text":"<ul> <li>Simon will setup the project in our GIT Repo.</li> <li>Fortschrittberichte Weekly</li> <li>Idea: Move the workforce between front and backend depending on the Meilenstein/Current Project.</li> <li>Svelte Material UI for uniform design</li> <li>SASS</li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM4/#frontend","title":"Frontend:","text":"<ul> <li>Simon, Andy, Consti, Jana</li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM4/#backend","title":"Backend:","text":"<ul> <li>Max, Sami, Louis, Martin </li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM4/#to-do","title":"To-Do:","text":"<ul> <li>[ ] Snow cards adgabe\ud83d\udcc5 2022-11-20 </li> <li>[ ] Logo</li> <li>[ ] Connect Front &amp; Backend using Consti Repo\u23eb </li> <li>[ ] Finish Zusammenfassung for Meilenstein \u23eb </li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"meetings/SE-PM4/#respources","title":"Respources:","text":"<ul> <li>https://www.youtube.com/watch?v=Qr4QMBUPxWo</li> <li>JSON Web token https://de.wikipedia.org/wiki/JSON_Web_Token</li> <li>https://github.com/cabreraalex/svelte-flask-example</li> </ul>","tags":["meeting","Lab","SoftwareEngineering"]},{"location":"milestones/design/crc_cards/","title":"CRC Cards","text":"Attribute Value Class name Database Superclass Responsibilities create, read, update, delete exercise data; create, read, update, delete user data Collaborators AbstractExercise; AbstractUser Attribute Value Class name Server Superclass Responsibilities serve webpages and related files; provide API interface; translate API requests into SQL queries Collaborators Database; AbstractUser; AbstractExercise Attribute Value Class name AbstractUser Superclass Responsibilities reflect database structure; provide database interface; define API route Collaborators Database; Server Attribute Value Class name User Superclass AbstractUser Responsibilities solve exercises Collaborators AbstractExercise Attribute Value Class name Administrator Superclass AbstractUser Responsibilities manipulate exercise data; evaluate solutions; evaluate users Collaborators Database; ExerciseCreator; AbstractExercise; User; LearningProgress Attribute Value Class name AbstractExercise Superclass Responsibilities reflect database structure; provide database interface; define API route Collaborators Database; Server Attribute Value Class name GapTextExercise Superclass AbstractExercise Responsibilities Collaborators Attribute Value Class name SyntaxExercise Superclass AbstractExercise Responsibilities Collaborators Attribute Value Class name ParsonsPuzzleExercise Superclass AbstractExercise Responsibilities Collaborators Attribute Value Class name FindTheBugExercise Superclass AbstractExercise Responsibilities Collaborators Attribute Value Class name DocumentationExercise Superclass AbstractExercise Responsibilities Collaborators Attribute Value Class name OutputExercise Superclass AbstractExercise Responsibilities Collaborators Attribute Value Class name ProgrammingExercise Superclass AbstractExercise Responsibilities Collaborators Attribute Value Class name ExerciseTracker Superclass Responsibilities track solving time Collaborators AbstractExercise Attribute Value Class name ExerciseEvaluator Superclass Responsibilities evaluate solution; store solution attempt and solving time Collaborators SourceCodeEvaluator; AbstractExercise; ExerciseTracker; Database; Administrator Attribute Value Class name SourceCodeEvaluator Superclass Responsibilities parse user code; execute user code in sandbox Collaborators ExerciseEvaluator; AbstractExercise; ExerciseTracker; Database; Administrator Attribute Value Class name LearningProgress Superclass Responsibilities assemble learning progress; create graphical representation Collaborators Database; User; AbstractExercise Attribute Value Class name ExerciseCreator Superclass Responsibilities create exercise with hints and solution Collaborators Database; AbstractExercise Attribute Value Class name HomePage Superclass Responsibilities provide login Collaborators AbstractUser; LoginArea Attribute Value Class name LoginArea Superclass Responsibilities display components Collaborators TextField; LoginButton; SignUpButton; ForgotPasswordButton Attribute Value Class name TextField Superclass Responsibilities accept user input; obfuscate password input Collaborators Attribute Value Class name LoginButton Superclass Responsibilities trigger login process Collaborators Server Attribute Value Class name SignUpButton Superclass Responsibilities trigger user creation process Collaborators Server Attribute Value Class name ForgotPasswordButton Superclass Responsibilities trigger password reset process Collaborators Server"},{"location":"milestones/final/final/","title":"Zusammenfassung aller Meilensteine (Entwicklerhandbuch)","text":""},{"location":"milestones/final/final/#meilenstein-1-volere-snow-cards","title":"Meilenstein 1 (Volere Snow-Cards):","text":"<p>Mit den Snow Cards haben wir die Requirements unseres Systems erarbeitet. Dazu haben wir uns die einzelnen, von der Aufgabenstellung gegebenen Systemteile hergenommen und \u00fcberlegt, wie diese funktionieren sollten. Dieser Schritt ist wichtig, damit man im Vorhinein bereits Erwartungen festlegt und im weiteren Verlauf damit sicherstellen kann, dass sich unsere Arbeit in die richtige Richtung bewegt. Des Weiteren bekommt man dadurch einen guten ersten \u00dcberblick \u00fcber die Gesamtheit des Projektes.</p>"},{"location":"milestones/final/final/#meilenstein-2-crc-cards","title":"Meilenstein 2 (CRC-Cards):","text":"<p>Die CRC-Cards, dienen dazu, das System, entsprechend der Requirements, in verschiedene Bereiche/Klassen zu unterteilen und die Interaktionen zwischen diesen festzulegen. Dazu haben wir uns anhand unserer ersten Vorstellungen und der Snow Cards \u00fcberlegt, wie man das System so unterteilen kann, dass es m\u00f6glichst \u00fcbersichtlich bleibt und m\u00f6glichst einfach und effizient umzusetzen ist. Damit haben wir den Grundstein f\u00fcr die Implementierung des Projektes gelegt.</p>"},{"location":"milestones/final/final/#meilenstein-3-unittests","title":"Meilenstein 3 (Unittests):","text":"<p>Die Tests sind einer der wichtigsten Aspekte, der erfolgreichen Umsetzung eines Programmierprojektes. Sie stellen sicher, dass Funktionalit\u00e4t (\u201eBugfreiheit\u201c) bei zunehmender Komplexit\u00e4t und voranschreitenden Ver\u00e4nderungen des Quellcodes gew\u00e4hrleistet bleibt. Das gibt sowohl dem Benutzer, als auch dem Entwickler eines Systems die Sicherheit, dass dieses zu einem gewissen Grad benutzbar ist. Um die Testf\u00e4lle zu erarbeiten haben wir uns zun\u00e4chst dar\u00fcber Gedanken gemacht, unter welchen Bedingungen unsere Web-App benutzbar sein soll und mit welchen Sonderf\u00e4llen sie dadurch Konfrontiert werden k\u00f6nnte. Mit diesen Informationen haben wir dann Testf\u00e4lle erarbeitet, die im Sp\u00e4teren dann implementiert wurden, um automatisches Testen zu erm\u00f6glichen.</p>"},{"location":"milestones/requirements/administration/","title":"Administration System","text":""},{"location":"milestones/requirements/administration/#functional-requirements","title":"Functional requirements","text":"Field Value Requirement # 3.1 Requirement Type functional Event/BUC/PUC # administration Description the platform shall conform to data protection requirements Rationale the administration system shall not allow access to sensitive user information Originator user, data protection officer Fit Criterion federal data protection officer approves the design Customer Satisfaction 1 Customer Dissatisfaction 3 Priority 3 Dependencies Conflicts 3.2 Support Materials https://gdpr-info.eu/ History created 05.11.2022 Field Value Requirement # 3.2 Requirement Type functional Event/BUC/PUC # administration Description the administration system shall provide insights into required metrics Rationale metrics are necessary to create learning schedules Originator customer Fit Criterion all the required metrics can be analyzed in the administration system Customer Satisfaction 5 Customer Dissatisfaction 5 Priority 5 Dependencies Conflicts 3.1 Support Materials History created 05.11.2022 Field Value Requirement # 3.3 Requirement Type functional Event/BUC/PUC # administration Description the administration system shall provide the ability to create tasks Rationale creating tasks is necessary to expand the platform Originator customer, administrator Fit Criterion after a year the platform has more than just the sample exercises Customer Satisfaction 5 Customer Dissatisfaction 5 Priority 3 Dependencies Conflicts Support Materials History created 07.11.2022"},{"location":"milestones/requirements/administration/#non-functional-requirements","title":"Non-functional requirements","text":"Field Value Requirement # 3.4 Requirement Type non-functional Event/BUC/PUC # administration Description the administration system shall be intuitive to use Rationale an unintuitive administration system drives the administrators away Originator administrator Fit Criterion an administrator shall perform a task in less then 15 minutes after reading the user manual Customer Satisfaction 3 Customer Dissatisfaction 4 Priority 1 Dependencies Conflicts Support Materials History created 07.11.2022 Field Value Requirement # 3.5 Requirement Type non-functional Event/BUC/PUC # administration Description the administration system shall work performant Rationale long response times lower the user experience Originator administrator Fit Criterion the administration system returns results after a maximum of one second Customer Satisfaction 3 Customer Dissatisfaction 4 Priority 1 Dependencies Conflicts Support Materials History created 07.11.2022"},{"location":"milestones/requirements/evaluation/","title":"Evaluation System","text":""},{"location":"milestones/requirements/evaluation/#functional-requirements","title":"Functional requirements","text":"Field Value Requirement # 4.1 Requirement Type functional Event/BUC/PUC # evaluation Description the user receives an evaluation after submitting a solution Rationale the user needs to see an evaluation to understand the scoring Originator customer Fit Criterion validation with test data Customer Satisfaction 1 Customer Dissatisfaction 5 Priority 5 Dependencies Conflicts Support Materials History created 05.11.2022 Field Value Requirement # 4.2 Requirement Type functional Event/BUC/PUC # evaluation Description the evaluation system saves results to the database Rationale learning process is evident and comparison the previous solutions is possible Originator customer Fit Criterion validation with test data Customer Satisfaction 2 Customer Dissatisfaction 4 Priority 2 Dependencies Conflicts Support Materials History created 05.11.2022 Field Value Requirement # 4.3 Requirement Type functional Event/BUC/PUC # evaluation Description the evaluation system shall provide a sample solution Rationale user needs to see a correct solution for education effect Originator user, customer Fit Criterion validation with wrong solutions Customer Satisfaction 5 Customer Dissatisfaction 4 Priority 3 Dependencies Conflicts Support Materials History created 05.11.2022"},{"location":"milestones/requirements/evaluation/#non-functional-requirements","title":"Non-functional requirements","text":"Field Value Requirement # 4.4 Requirement Type non-functional Event/BUC/PUC # evaluation Description the evaluation system handles malicious user input Rationale the evaluation system is available most of the time Originator customer, administrator Fit Criterion the evaluation system crashes only at 1% of cases when presented with specially crafted or randomly generated user input Customer Satisfaction 2 Customer Dissatisfaction 4 Priority 3 Dependencies Conflicts Support Materials History created 05.11.2022 Field Value Requirement # 4.5 Requirement Type non-functional Event/BUC/PUC # evaluation Description the evaluation system shall perform task with low latency Rationale high user experience and satisfaction is ensured Originator user, customer Fit Criterion in tests the evaluation system returns after at least 1 second Customer Satisfaction 1 Customer Dissatisfaction 4 Priority 2 Dependencies Conflicts Support Materials https://www.selenium.dev/ History created 05.11.2022"},{"location":"milestones/requirements/exercises/","title":"Exercise System","text":""},{"location":"milestones/requirements/exercises/#functional-requirements","title":"Functional requirements","text":"Field Value Requirement # 2.1 Requirement Type functional Event/BUC/PUC # exercise Description hints for the programming exercises Rationale useful to avoid the user getting stuck and give additional information Originator user, customer Fit Criterion administrator should be able to add hints to an exercise Customer Satisfaction 4 Customer Dissatisfaction 3 Priority 2 Dependencies Conflicts Support Materials History created 10.11.2022 Field Value Requirement # 2.2 Requirement Type functional Event/BUC/PUC # exercise Description search function for exercises with type filter Rationale user can search for specific tasks to have a more individual learning experience Originator user, customer Fit Criterion all exercises can be found and filtered by type Customer Satisfaction 4 Customer Dissatisfaction 2 Priority 2 Dependencies Conflicts Support Materials History created 10.11.2022 Field Value Requirement # 2.3 Requirement Type functional Event/BUC/PUC # exercise Description log various metrics while the user solves the exercises Rationale statistics can be created to track the learning process Originator user, customer Fit Criterion metrics like time and how often an exercise was solved are logged and can be proofed with tests Customer Satisfaction 4 Customer Dissatisfaction 3 Priority 4 Dependencies Conflicts Support Materials History created 10.11.2022"},{"location":"milestones/requirements/exercises/#non-functional-requirements","title":"Non-functional requirements","text":"Field Value Requirement # 2.4 Requirement Type non-functional Event/BUC/PUC # exercise Description syntax highlighting in all exercises for both Python and Java Rationale syntax highlighting leads to a more readable und understandable source code, especially for beginners Originator user, customer Fit Criterion syntax is correctly highlighted in various scenarios Customer Satisfaction 2 Customer Dissatisfaction 4 Priority 2 Dependencies Conflicts Support Materials History created 09.11.2022 Field Value Requirement # 2.5 Requirement Type non-functional Event/BUC/PUC # exercise Description prevent the code validation system from running malicious code Rationale malicious code can lead to system crashes or remote code executions Originator customer Fit Criterion malicious code entered in the validation system does not cause the server to crash or undermines system integrity Customer Satisfaction 2 Customer Dissatisfaction 3 Priority 2 Dependencies Conflicts Support Materials History created 14.11.2022"},{"location":"milestones/requirements/login/","title":"Login System","text":""},{"location":"milestones/requirements/login/#functional-requirements","title":"Functional requirements","text":"Field Value Requirement # 1.1 Requirement Type functional Event/BUC/PUC # login Description button press triggers the login process Rationale pressing the login button starts the login process Originator user, customer, administrator Fit Criterion shibboleth system prompts for user credentials Customer Satisfaction 5 Customer Dissatisfaction 5 Priority 5 Dependencies Conflicts Support Materials shibboleth documentation History created 09.11.2022 Field Value Requirement # 1.2 Requirement Type functional Event/BUC/PUC # login Description user has the option to change his/her password Rationale when forgetting his/her password the user can request the system to send an e-mail to change the password Originator user, administrator Fit Criterion all users can successfully change their passwords Customer Satisfaction 5 Customer Dissatisfaction 3 Priority 2 Dependencies Conflicts Support Materials History created 09.11.2022"},{"location":"milestones/requirements/login/#non-functional-requirements","title":"Non-functional requirements","text":"Field Value Requirement # 1.3 Requirement Type non-functional Event/BUC/PUC # login Description the front page has an intuitive design Rationale lowering the hurdles for the user to start using the platform Originator user Fit Criterion a test group of users spots the login button in less than 3 seconds on average Customer Satisfaction 2 Customer Dissatisfaction 3 Priority 2 Dependencies Conflicts Support Materials https://m3.material.io History created 09.11.2022 Field Value Requirement # Requirement Type non-functional Event/BUC/PUC # login system Description the front page has an appealing design Rationale making a good first impression and don't annoy the users Originator user, customer Fit Criterion a test group of potential users considers creating a user account Customer Satisfaction 2 Customer Dissatisfaction 3 Priority 1 Dependencies Conflicts Support Materials History created 09.11.2022"},{"location":"milestones/testing/testing/","title":"Testing","text":""},{"location":"milestones/testing/testing/#evaluator-tests","title":"Evaluator Tests","text":""},{"location":"milestones/testing/testing/#gaptextexercise-tests","title":"GapTextExercise tests","text":""},{"location":"milestones/testing/testing/#test_evaluate_gap_text","title":"<code>test_evaluate_gap_text</code>","text":"<ul> <li>tests whether solutions for gap text exercises get correctly evaluated</li> <li>gap text exercises are exercises where one has to fill in blanks</li> </ul>"},{"location":"milestones/testing/testing/#syntaxexercise-tests","title":"SyntaxExercise tests","text":""},{"location":"milestones/testing/testing/#test_evaluate_syntax","title":"<code>test_evaluate_syntax</code>","text":"<ul> <li>tests whether solutions for syntax exercises get correctly evaluated</li> <li>syntax exercises are exercises where one has to point out syntax errors in a given code snippet</li> </ul>"},{"location":"milestones/testing/testing/#parsonspuzzleexercise-tests","title":"ParsonsPuzzleExercise tests","text":""},{"location":"milestones/testing/testing/#test_evaluate_parsons_puzzle","title":"<code>test_evaluate_parsons_puzzle</code>","text":"<ul> <li>tests whether solutions for parsons puzzle exercises get correctly evaluated</li> <li>parsons puzzle exercises are exercises where one has to arrange code bocks in the correct order</li> </ul>"},{"location":"milestones/testing/testing/#findthebugexercise-tests","title":"FindTheBugExercise tests","text":""},{"location":"milestones/testing/testing/#test_evaluate_find_the_bug","title":"<code>test_evaluate_find_the_bug</code>","text":"<ul> <li>tests whether solutions for find the bug exercises get correctly evaluated</li> <li>find the bug exercises are exercises where one has to point out bugs in a given code snippet</li> </ul>"},{"location":"milestones/testing/testing/#documentationexercise-tests","title":"DocumentationExercise tests","text":""},{"location":"milestones/testing/testing/#test_evaluate_documentation","title":"<code>test_evaluate_documentation</code>","text":"<ul> <li>tests whether solutions for documentation exercises get correctly evaluated</li> <li>documentation exercises are exercises where one has to describe what a given code snippet does</li> <li>this exercise type can not be evaluated automatically, instead we mark them as <code>pending</code> and an admin evaluates the solution</li> </ul>"},{"location":"milestones/testing/testing/#outputexercise-tests","title":"OutputExercise tests","text":""},{"location":"milestones/testing/testing/#test_evaluate_output","title":"<code>test_evaluate_output</code>","text":"<ul> <li>tests whether solutions for output exercises get correctly evaluated</li> <li>output exercises are exercises where one has to describe the output of a given code snippet</li> <li>this exercise type can not be evaluated automatically, instead we mark them as <code>pending</code> and an admin evaluates the solution</li> </ul>"},{"location":"milestones/testing/testing/#programmingexercise-tests","title":"ProgrammingExercise tests","text":""},{"location":"milestones/testing/testing/#test_evaluate_programming","title":"<code>test_evaluate_programming</code>","text":"<ul> <li>tests whether four different versions of one code example get correctly evaluated</li> <li>the test cases are two Python tests and two Java tests, both in a correct and an incorrect version</li> </ul>"},{"location":"milestones/testing/testing/#exercise-tests","title":"Exercise Tests","text":""},{"location":"milestones/testing/testing/#get-tests","title":"GET tests","text":""},{"location":"milestones/testing/testing/#test_get_existing","title":"<code>test_get_existing</code>","text":"<ul> <li>tests whether the system correctly returns an exercise requested by ID</li> <li>input: HTTP request with <code>{\"exercise_id\": 1}</code></li> <li>expected output: all fields of the exercise and HTTP status <code>200</code></li> </ul>"},{"location":"milestones/testing/testing/#test_get_non_existing","title":"<code>test_get_non_existing</code>","text":"<ul> <li>tests whether the system can tell that an exercise does not exist</li> <li>input: HTTP request with <code>{\"exercise_id\": -2}</code></li> <li>expected output: <code>{}</code> with HTTP status <code>200</code></li> </ul>"},{"location":"milestones/testing/testing/#test_get_existing_no_login","title":"<code>test_get_existing_no_login</code>","text":"<ul> <li>tests whether the system rejects the attempt to query exercise information without being logged in</li> <li>input: HTTP request with <code>{\"exercise_id\": 1}</code> but without user token</li> <li>expected output: <code>{\"message\": \"Login required\"}</code> with HTTP status <code>401</code></li> </ul>"},{"location":"milestones/testing/testing/#post-tests","title":"POST tests","text":""},{"location":"milestones/testing/testing/#test_post_success","title":"<code>test_post_success</code>","text":"<ul> <li>tests whether it is possible to create an exercise with an admin token</li> <li>input: HTTP request with <code>{\"exercise_title\": \"My Exercise\", \"exercise_description\" : \"This is a good Test example!\", \"exercise_type\": 1, \"exercise_content\":\"1+1=\"}</code></li> <li>expected output: <code>{\"exercise_title\": \"My Exercise\", \"exercise_description\" : \"This is a good Test example!\", \"exercise_type\": 1, \"exercise_content\":\"1+1=\"}</code> with HTTP status <code>201</code></li> </ul>"},{"location":"milestones/testing/testing/#test_post_no_access","title":"<code>test_post_no_access</code>","text":"<ul> <li>tests whether the system rejects the attempt to create an exercise without an admin token</li> <li>input: <code>{\"exercise_title\": \"My Exercise\", \"exercise_description\" : \"This is a good Test example!\", \"exercise_type\": 1, \"exercise_content\":\"1+1=\"}</code></li> <li>expected output: <code>{\"message\": \"Login required\"}</code> with HTTP status <code>401</code> or <code>{\"message\": \"No Access\"}</code> with HTTP status <code>403</code></li> </ul>"},{"location":"milestones/testing/testing/#test_post_existing","title":"<code>test_post_existing</code>","text":"<ul> <li>tests whether the system rejects the attempt to create a duplicate exercise</li> <li>input: HTTP request with <code>exercise_title</code> which already exists</li> <li>expected output: <code>{\"message\": \"An exercise with this title already exists\"}</code> with HTTP status <code>409</code></li> </ul>"},{"location":"milestones/testing/testing/#test_post_without_req_arg","title":"<code>test_post_without_req_arg</code>","text":"<ul> <li>tests whether the system rejects the attempt to create an exercise with incomplete data</li> <li>input: HTTP request with missing fields</li> <li>expected output: response about the missing field with HTTP status <code>400</code></li> </ul>"},{"location":"milestones/testing/testing/#put-tests","title":"PUT tests","text":""},{"location":"milestones/testing/testing/#test_put_existing","title":"<code>test_put_existing</code>","text":"<ul> <li>tests whether a request with an admin token can change exercise information</li> <li>input: HTTP request with new <code>exercise_content</code> field</li> <li>expected output: <code>{\"message\": \"Successfully changed exercise with exercise_id &lt;exercise_id&gt;\"}</code> with HTTP status <code>200</code></li> </ul>"},{"location":"milestones/testing/testing/#test_put_existing_user","title":"<code>test_put_existing_user</code>","text":"<ul> <li>tests whether the system rejects the attempt to change exercise information with an user token</li> <li>input: HTTP request with new <code>exercise_content</code> field and an user token</li> <li>expected output: <code>{\"message\": \"No Access\"}</code> with HTTP status <code>403</code></li> </ul>"},{"location":"milestones/testing/testing/#test_put_existing_no_login","title":"<code>test_put_existing_no_login</code>","text":"<ul> <li>tests whether the system rejects the attempt to change exercise information without any token at all</li> <li>input: HTTP request with new <code>exercise_content</code> field without any token</li> <li>expected output: <code>{\"message\": \"Login required\"}</code> with HTTP status <code>401</code></li> </ul>"},{"location":"milestones/testing/testing/#test_put_without_req_arg","title":"<code>test_put_without_req_arg</code>","text":"<ul> <li>tests whether the system rejects the attempt to change exercise information with incomplete fields</li> <li>input: HTTP request with missing <code>exercise_id</code> field</li> <li>expected output: <code>{\"message\": \"exercise_id is missing\"}</code> with HTTP status <code>400</code></li> </ul>"},{"location":"milestones/testing/testing/#test_put_non_existing","title":"<code>test_put_non_existing</code>","text":"<ul> <li>tests whether the system rejects the attempt to change information of an exercise which does not exist</li> <li>input: HTTP request with new exercise information and an ID which does not exist</li> <li>expected output: <code>{\"message\": \"Exercise with exercise_id &lt;exercise_id&gt; does not exist\"}</code> with HTTP status <code>404</code></li> </ul>"},{"location":"milestones/testing/testing/#delete-tests","title":"DELETE tests","text":""},{"location":"milestones/testing/testing/#test_delete_existing","title":"<code>test_delete_existing</code>","text":"<ul> <li>tests whether it is possible to delete an exercise</li> <li>this test also tests about insufficient privileges (i.e. using an user token or no token)</li> <li>input: HTTP requests with admin token, with user token or without a token but always with an existing exercise ID</li> <li>expected output: depending on the request <code>{\"message\": \"Login required\"}</code> with HTTP status <code>401</code> when the token is missing, <code>{\"message\": \"No Access\"}</code> with HTTP status <code>403</code> when an user token is provided or <code>{\"message\": \"Successfully deleted exercise with exercise_id &lt;exercise_id&gt;\"}</code> with HTTP status <code>200</code> when the request was successful</li> </ul>"},{"location":"milestones/testing/testing/#test_delete_non_existing","title":"<code>test_delete_non_existing</code>","text":"<ul> <li>tests whether it is not possible to delete an exercise which does not exist</li> <li>input: HTTP request with <code>exercise_id: -2</code></li> <li>expected output: <code>{\"message\": \"Exercise with exercise_id &lt;exercise_id&gt; does not exist\"}</code> with HTTP status <code>404</code></li> </ul>"},{"location":"milestones/testing/testing/#java-sandbox-tests","title":"Java Sandbox Tests","text":""},{"location":"milestones/testing/testing/#test_init_constructor","title":"<code>test_init_constructor</code>","text":"<ul> <li>tests correct initialization of an instance of the ExecuteJava class</li> </ul>"},{"location":"milestones/testing/testing/#test_jvm_connection","title":"<code>test_jvm_connection</code>","text":"<ul> <li>tests whether a connection to the JWM is present</li> </ul>"},{"location":"milestones/testing/testing/#test_correct_user_code","title":"<code>test_correct_user_code</code>","text":"<ul> <li>tests behavior when presented with correct user code</li> <li>user code is correct if there are no syntax, compilation or runtime errors and the code works as intended</li> </ul>"},{"location":"milestones/testing/testing/#test_wrong_user_code","title":"<code>test_wrong_user_code</code>","text":"<ul> <li>tests behavior when presented with wrong user code</li> <li>there are no errors, but the code does not produce the desired output</li> </ul>"},{"location":"milestones/testing/testing/#test_timeout","title":"<code>test_timeout</code>","text":"<ul> <li>tests whether the system aborts long running evaluations after a fixed amount of time</li> </ul>"},{"location":"milestones/testing/testing/#test_not_compilable","title":"<code>test_not_compilable</code>","text":"<ul> <li>tests behavior when user code results in a syntax or compilation error</li> </ul>"},{"location":"milestones/testing/testing/#test_not_executable","title":"<code>test_not_executable</code>","text":"<ul> <li>tests behavior when user code encounters a runtime error</li> </ul>"},{"location":"milestones/testing/testing/#login-tests","title":"Login Tests","text":""},{"location":"milestones/testing/testing/#test_login_success","title":"<code>test_login_success</code>","text":"<ul> <li>tests whether login with correct credentials is possible</li> <li>input: HTTP request with correct user name and word</li> <li>expected output: <code>{\"message\": \"Welcome &lt;user_name&gt;\"}</code> with HTTP status <code>200</code> and a session cookie</li> </ul>"},{"location":"milestones/testing/testing/#test_login_fail","title":"<code>test_login_fail</code>","text":"<ul> <li>tests whether login fails when presented with wrong word or unknown user</li> <li>input: HTTP requests with either a wrong word or an user which does not exist</li> <li>expected output: <code>{\"message\": \"Incorrect user name or word\"}</code> with HTTP status <code>401</code> but without a session cookie</li> </ul>"},{"location":"milestones/testing/testing/#test_login_without_req_arg","title":"<code>test_login_without_req_arg</code>","text":"<ul> <li>tests whether the system prevents a login with missing fields</li> <li>input: HTTP requests with missing <code>user_name</code> and <code>user_</code> respectively</li> <li>expected output: message about missing field and HTTP status <code>400</code> with no session cookie</li> </ul>"},{"location":"milestones/testing/testing/#python-sandbox-tests","title":"Python Sandbox Tests","text":""},{"location":"milestones/testing/testing/#test_correct_user_code_1","title":"<code>test_correct_user_code</code>","text":"<ul> <li>tests user code which can be executed and produces the desired output</li> </ul>"},{"location":"milestones/testing/testing/#test_wrong_user_code_1","title":"<code>test_wrong_user_code</code>","text":"<ul> <li>tests user code which can be executed but does not produce the expected output</li> </ul>"},{"location":"milestones/testing/testing/#test_timeout_1","title":"<code>test_timeout</code>","text":"<ul> <li>tests whether the system aborts evaluations which run longer than a certain amount of time</li> </ul>"},{"location":"milestones/testing/testing/#test_not_compilable_1","title":"<code>test_not_compilable</code>","text":"<ul> <li>tests user code wich produces a compiler error</li> <li>despite python being an interpreted language is is possible to precompile certain parts of a script</li> </ul>"},{"location":"milestones/testing/testing/#test_not_executable_1","title":"<code>test_not_executable</code>","text":"<ul> <li>tests user code which produces a runtime error</li> </ul>"},{"location":"milestones/testing/testing/#solution-tests","title":"Solution Tests","text":""},{"location":"milestones/testing/testing/#get-tests_1","title":"GET tests","text":""},{"location":"milestones/testing/testing/#test_get_existing_by_id","title":"<code>test_get_existing_by_id</code>","text":"<ul> <li>tests whether it is possible to get a solution based in its ID</li> </ul>"},{"location":"milestones/testing/testing/#test_get_existing_by_user_id","title":"<code>test_get_existing_by_user_id</code>","text":"<ul> <li>tests whether it is possible to get a solution based on the ID of the user who submitted the solution</li> </ul>"},{"location":"milestones/testing/testing/#test_get_existing_by_exercise_id","title":"<code>test_get_existing_by_exercise_id</code>","text":"<ul> <li>tests whether it is possible to get a solution based on the ID of the exercise the solution was submitted for</li> </ul>"},{"location":"milestones/testing/testing/#test_get_existing_by_date","title":"<code>test_get_existing_by_date</code>","text":"<ul> <li>tests whether it is possible to get a solution based on the date it was submitted on</li> </ul>"},{"location":"milestones/testing/testing/#test_get_existing_by_duration","title":"<code>test_get_existing_by_duration</code>","text":"<ul> <li>tests whether it is possible to get a solution based on duration the user needed to solve the exercise</li> </ul>"},{"location":"milestones/testing/testing/#test_get_existing_by_correct","title":"<code>test_get_existing_by_correct</code>","text":"<ul> <li>tests whether it is possible to get a solution based on state whether the solution is correct or not</li> </ul>"},{"location":"milestones/testing/testing/#test_get_existing_by_pending","title":"<code>test_get_existing_by_pending</code>","text":"<ul> <li>tests whether is is possible to get a solution based on its state whether manual evaluation is pending</li> </ul>"},{"location":"milestones/testing/testing/#test_get_non_existing_by_id","title":"<code>test_get_non_existing_by_id</code>","text":"<ul> <li>tests whether the system handles requesting a non existing solution ID</li> </ul>"},{"location":"milestones/testing/testing/#test_get_non_existing_by_user_id","title":"<code>test_get_non_existing_by_user_id</code>","text":"<ul> <li>tests whether the system handles requesting a solution from user who has not submitted as solution yet</li> </ul>"},{"location":"milestones/testing/testing/#test_get_non_existing_by_exercise_id","title":"<code>test_get_non_existing_by_exercise_id</code>","text":"<ul> <li>tests whether the system handles requesting a solution for an exercise which has not got a solution submitted for</li> </ul>"},{"location":"milestones/testing/testing/#test_get_non_existing_by_date","title":"<code>test_get_non_existing_by_date</code>","text":"<ul> <li>tests whether the system handles requesting a solution from a date when no solutions were submitted</li> </ul>"},{"location":"milestones/testing/testing/#test_get_non_existing_by_duration","title":"<code>test_get_non_existing_by_duration</code>","text":"<ul> <li>tests whether the system handles requesting a solution which did not need the requested amount of time to solve</li> </ul>"},{"location":"milestones/testing/testing/#test_get_non_existing_by_correct","title":"<code>test_get_non_existing_by_correct</code>","text":"<ul> <li>tests whether the system handles requesting a solution when there are no solutions which have the requested status</li> </ul>"},{"location":"milestones/testing/testing/#test_get_non_existing_by_pending","title":"<code>test_get_non_existing_by_pending</code>","text":"<ul> <li>tests whether the system handles requesting a solution when there are no solutions which have the requested status</li> </ul>"},{"location":"milestones/testing/testing/#test_get_restrict_page_size","title":"<code>test_get_restrict_page_size</code>","text":"<ul> <li>tests whether restricting the number of returned items works</li> </ul>"},{"location":"milestones/testing/testing/#post-tests_1","title":"POST tests","text":""},{"location":"milestones/testing/testing/#test_create_as_user","title":"<code>test_create_as_user</code>","text":"<ul> <li>tests whether it is possible to submit a solution with a user token</li> </ul>"},{"location":"milestones/testing/testing/#test_create_as_admin","title":"<code>test_create_as_admin</code>","text":"<ul> <li>tests whether it is possible to submit a solution with an admin token</li> </ul>"},{"location":"milestones/testing/testing/#test_create_without_token","title":"<code>test_create_without_token</code>","text":"<ul> <li>tests whether it is possible to submit a solution without a token</li> <li>only logged in users and admins can submit solutions</li> </ul>"},{"location":"milestones/testing/testing/#test_create_without_user_id","title":"<code>test_create_without_user_id</code>","text":"<ul> <li>tests whether it is possible to submit a solution which does not reference the user who submitted the solution</li> </ul>"},{"location":"milestones/testing/testing/#test_create_without_exercise_id","title":"<code>test_create_without_exercise_id</code>","text":"<ul> <li>tests whether it is possible to submit a solution which does not reference the exercise it was submitted for</li> </ul>"},{"location":"milestones/testing/testing/#test_create_with_date_in_past","title":"<code>test_create_with_date_in_past</code>","text":"<ul> <li>tests whether it is possible to submit a solution with a start date in the past</li> <li>as the database entry gets created right after submitting the solution the start of the working time has to be close to the current and can not be far in the past</li> </ul>"},{"location":"milestones/testing/testing/#test_create_with_negative_duration","title":"<code>test_create_with_negative_duration</code>","text":"<ul> <li>tests whether it is possible to submit a solution with a negative amount of time the user needed to solve the exercise</li> <li>negative time intervals are not possible in reality</li> </ul>"},{"location":"milestones/testing/testing/#test_create_with_empty_text","title":"<code>test_create_with_empty_text</code>","text":"<ul> <li>tests whether it is possible to submit a solution without the solution text</li> <li>providing no solution to an exercise is useless</li> </ul>"},{"location":"milestones/testing/testing/#test_create_with_malformed_text","title":"<code>test_create_with_malformed_text</code>","text":"<ul> <li>tests whether it is possible to submit a solution where the solution text does not adhere to the schema</li> <li>there is a XML schema which defines how the solution for every exercise type should be defined</li> </ul>"},{"location":"milestones/testing/testing/#put-tests_1","title":"PUT tests","text":""},{"location":"milestones/testing/testing/#test_change_existing","title":"<code>test_change_existing</code>","text":"<ul> <li>tests whether it is possible to change the fields of an existing solution</li> </ul>"},{"location":"milestones/testing/testing/#test_change_non_existing","title":"<code>test_change_non_existing</code>","text":"<ul> <li>tests whether it is possible to change the fields of a non existing solution</li> <li>when trying to change the fields a solution which does not exist an error code gets returned</li> </ul>"},{"location":"milestones/testing/testing/#test_change_as_user","title":"<code>test_change_as_user</code>","text":"<ul> <li>tests whether it is possible to change the fields of a solution with an user token</li> <li>only admins are allowed to change solution fields</li> </ul>"},{"location":"milestones/testing/testing/#test_change_as_admin","title":"<code>test_change_as_admin</code>","text":"<ul> <li>tests whether it is possible to change the fields of a solution with an admin token</li> </ul>"},{"location":"milestones/testing/testing/#test_change_without_token","title":"<code>test_change_without_token</code>","text":"<ul> <li>tests whether it is possible to change the fields of a solution without a token</li> <li>changing a solution requires an admin token</li> </ul>"},{"location":"milestones/testing/testing/#test_change_to_empty_user","title":"<code>test_change_to_empty_user</code>","text":"<ul> <li>tests whether it is possible to change a solution so it does not reference an user</li> </ul>"},{"location":"milestones/testing/testing/#test_change_to_empty_exercise","title":"<code>test_change_to_empty_exercise</code>","text":"<ul> <li>tests whether it is possible to change a solution so it does not reference an exercise</li> </ul>"},{"location":"milestones/testing/testing/#test_change_to_date_in_past","title":"<code>test_change_to_date_in_past</code>","text":"<ul> <li>tests whether it is possible to change a solution so that the start date of it is in the past</li> <li>has to be possible as changing solution fields always happens after the solution was created</li> </ul>"},{"location":"milestones/testing/testing/#test_change_to_negative_duration","title":"<code>test_change_to_negative_duration</code>","text":"<ul> <li>tests whether it is possible to change a solution so that its amount of time the user needed to solve the exercise is negative</li> <li>negative time intervals are not possible in reality</li> </ul>"},{"location":"milestones/testing/testing/#test_change_to_empty_text","title":"<code>test_change_to_empty_text</code>","text":"<ul> <li>tests whether it is possible to change a solution so that its solution text is empty</li> <li>providing no solution to an exercise is useless</li> </ul>"},{"location":"milestones/testing/testing/#test_change_to_malformed_text","title":"<code>test_change_to_malformed_text</code>","text":"<ul> <li>tests whether it is possible to change a solution so that its solution text does not adhere to the schema</li> <li>there is a XML schema which defines how the solution for every exercise type should be defined</li> </ul>"},{"location":"milestones/testing/testing/#delete-tests_1","title":"DELETE tests","text":""},{"location":"milestones/testing/testing/#test_delete_existing_1","title":"<code>test_delete_existing</code>","text":"<ul> <li>tests whether it is possible to delete an existing solution</li> </ul>"},{"location":"milestones/testing/testing/#test_delete_non_existing_1","title":"<code>test_delete_non_existing</code>","text":"<ul> <li>tests whether the system handles deleting a non existing solution</li> <li>when deleting a solution which does not exist an error code gets returned</li> </ul>"},{"location":"milestones/testing/testing/#test_delete_as_user","title":"<code>test_delete_as_user</code>","text":"<ul> <li>tests whether it is possible to delete a solution with an user token</li> <li>only admins are allowed to delete solutions</li> </ul>"},{"location":"milestones/testing/testing/#test_delete_as_admin","title":"<code>test_delete_as_admin</code>","text":"<ul> <li>tests whether it is possible to delete a solution with an admin token</li> </ul>"},{"location":"milestones/testing/testing/#test_delete_without_token","title":"<code>test_delete_without_token</code>","text":"<ul> <li>tests whether it is possible to delete a solution without a token</li> <li>deleting a solution requires an admin token</li> </ul>"},{"location":"milestones/testing/testing/#user-tests","title":"User Tests","text":""},{"location":"milestones/testing/testing/#get-tests_2","title":"GET tests","text":""},{"location":"milestones/testing/testing/#test_get_existing_by_id_1","title":"<code>test_get_existing_by_id</code>","text":"<ul> <li>tests whether the system finds and returns an existing user correctly based on the users ID</li> <li>input: HTTP request with <code>user_id = 2</code></li> <li>expected output: <code>{\"user_id\": 2, \"user_name\": \"tuser\", \"user_mail\": \"tuser@example.com\", \"user_role\": \"User\"}</code> and HTTP status <code>200</code></li> </ul>"},{"location":"milestones/testing/testing/#test_get_existing_by_name","title":"<code>test_get_existing_by_name</code>","text":"<ul> <li>tests whether the system finds and returns an existing user correctly based on the users name</li> <li>input: HTTP request with <code>user_name = \"tuser\"</code></li> <li>expected output: <code>{\"user_id\": 2, \"user_name\": \"tuser\", \"user_mail\": \"tuser@example.com\", \"user_role\": \"User\"}</code> and HTTP status <code>200</code></li> </ul>"},{"location":"milestones/testing/testing/#test_get_existing_by_mail","title":"<code>test_get_existing_by_mail</code>","text":"<ul> <li>tests whether the system finds and returns an existing user correctly based on the users mail address</li> <li>input: HTTP request with <code>user_mail = \"tuser@example.com\"</code></li> <li>expected output: <code>{\"user_id\": 2, \"user_name\": \"tuser\", \"user_mail\": \"tuser@example.com\", \"user_role\": \"User\"}</code> and HTTP status <code>200</code></li> </ul>"},{"location":"milestones/testing/testing/#test_get_existing_by_role","title":"<code>test_get_existing_by_role</code>","text":"<ul> <li>tests whether the system finds and returns an existing user correctly based on the users role</li> <li>input: HTTP request with <code>user_role = 3</code></li> <li>expected output: <code>{\"user_id\": 2, \"user_name\": \"tuser\", \"user_mail\": \"tuser@example.com\", \"user_role\": \"User\"}</code> and HTTP status <code>200</code></li> </ul>"},{"location":"milestones/testing/testing/#test_get_non_existing_by_id_1","title":"<code>test_get_non_existing_by_id</code>","text":"<ul> <li>tests how the system handles an request with an ID wich is not present in the database</li> <li>input: HTTP request with <code>user_id = 25</code></li> <li>expected output: <code>{}</code> and HTTP status <code>200</code></li> </ul>"},{"location":"milestones/testing/testing/#test_get_non_existing_by_name","title":"<code>test_get_non_existing_by_name</code>","text":"<ul> <li>tests how the system handles an request with a name which is not present in the database</li> <li>input: HTTP request with <code>user_name = \"nuser\"</code></li> <li>expected output: <code>{}</code> and HTTP status <code>200</code></li> </ul>"},{"location":"milestones/testing/testing/#test_get_non_existing_by_mail","title":"<code>test_get_non_existing_by_mail</code>","text":"<ul> <li>tests how the system handles an request with a mail address which is not present in the database</li> <li>input: HTTP request with <code>user_mail = \"nuser@example.com\"</code></li> <li>expected output: <code>{}</code> and HTTP status <code>200</code></li> </ul>"},{"location":"milestones/testing/testing/#test_get_non_existing_by_role","title":"<code>test_get_non_existing_by_role</code>","text":"<ul> <li>tests how the system handles an request with a role which is not present in the database</li> <li>input: HTTP request with <code>user_role = 4</code></li> <li>expected output: <code>{\"message\": {\"user_role\": \"4 is not a valid UserRole\"}}</code> and HTTP status <code>400</code></li> </ul>"},{"location":"milestones/testing/testing/#test_restrict_page_size","title":"<code>test_restrict_page_size</code>","text":"<ul> <li>tests whether the system correctly returns only the amount of elements which is specified in <code>user_limit</code> parameter</li> <li>input: HTTP request with <code>user_limit = 5</code></li> <li>expected output: response contains exactly 5 users and HTTP status <code>200</code></li> </ul>"},{"location":"milestones/testing/testing/#post-tests_2","title":"POST tests","text":""},{"location":"milestones/testing/testing/#test_create_user","title":"<code>test_create_user</code>","text":"<ul> <li>tests whether the system correctly creates a new user</li> <li>input: HTTP request with <code>{\"user_name\": \"Josslin Aloj\", \"user_mail\": \"Josslin.Aloj@example.com\", \"user_\": \"ian80\"}</code></li> <li>expected output: <code>{\"message\": \"The user was created successfully\", \"user_name\": \"Josslin Aloj\", \"user_mail\": \"Josslin.Aloj@example.com\", \"user_\": \"ian80\"}</code> and HTTP status <code>201</code></li> </ul>"},{"location":"milestones/testing/testing/#test_create_admin","title":"<code>test_create_admin</code>","text":"<ul> <li>tests whether the system correctly creates a new admin</li> <li>input: HTTP request with <code>{\"user_name\": \"Thurmon Uli\", \"user_mail\": \"Thurmon.Uli@example.com\", \"user_\": \"Pi5ta\", \"user_role\": 2}</code></li> <li>expected output: <code>{\"user_name\": \"Thurmon Uli\", \"user_mail\": \"Thurmon.Uli@example.com\", \"user_\": \"Pi5ta\", \"user_role\": 2}</code> and HTTP status <code>201</code></li> </ul>"},{"location":"milestones/testing/testing/#test_create_user_without_token","title":"<code>test_create_user_without_token</code>","text":"<ul> <li>tests whether it is possible to create a user with out a token (without being logged in)</li> <li>necessary to allow new users to create a account (they don't have a login yet, so they can't request a token)</li> <li>input: HTTP request with <code>{\"user_name\": \"Kon Archy\", \"user_mail\": \"Kon.Archy@example.com\", \"user_\": \"Fip5k\"}</code></li> <li>expected output: <code>{\"message\": \"The user was created successfully\", \"user_name\": \"Kon Archy\", \"user_mail\": \"Kon.Archy@example.com\", \"user_\": \"Fip5k\"}</code> and HTTP status <code>201</code></li> </ul>"},{"location":"milestones/testing/testing/#test_create_admin_without_token","title":"<code>test_create_admin_without_token</code>","text":"<ul> <li>tests whether the system rejects the attempt to create an admin without any token</li> <li>input: HTTP request with <code>{\"user_name\": \"Detleff Deric\", \"user_mail\": \"Detleff.Deric@example.com\", \"user_\": \"eNg9h\", \"user_role\": 2}</code></li> <li>expected output: <code>{\"message\": \"Login required\"}</code> and HTTP status <code>401</code></li> </ul>"},{"location":"milestones/testing/testing/#test_create_admin_with_user_token","title":"<code>test_create_admin_with_user_token</code>","text":"<ul> <li>tests whether the system rejects the attempt to create an admin without being the SAdmin (the SAdmin token is send in the request header)</li> <li>input: HTTP request with <code>{\"user_name\": \"Eldrige Ernesto\", \"user_mail\": \"Eldrige.Ernesto@example.com\", \"user_\": \"Xah8e\", \"user_role\": 2}</code></li> <li>expected output: <code>{\"message\": \"No Access\"}</code> and HTTP status <code>403</code></li> </ul>"},{"location":"milestones/testing/testing/#test_create_duplicate_user","title":"<code>test_create_duplicate_user</code>","text":"<ul> <li>tests whether the system rejects a new user with an existing mail (mail addresses have to be unique system wide)</li> <li>input: two HTTP requests with <code>{\"user_name\": \"Geoffrey Tretan\", \"user_mail\": \"Geoffrey.Tretan@example.com\", \"user_\": \"Abeo0\"}</code></li> <li>expected output: <code>{\"message\": \"A user with this mail already exists\"}</code> and HTTP status <code>409</code></li> </ul>"},{"location":"milestones/testing/testing/#test_create_user_with_empty_name","title":"<code>test_create_user_with_empty_name</code>","text":"<ul> <li>tests whether the system rejects the attempt to create an account with an empty name</li> <li>input: HTTP request with <code>{\"user_name\": \"\", \"user_mail\": \"Gofried.Dietbald@example.com\", \"user_\": \"koh6P\"}</code></li> <li>expected output: <code>{\"message\": \"user_name must not be empty\"}</code> and HTTP status <code>400</code></li> </ul>"},{"location":"milestones/testing/testing/#test_create_user_with_empty_mail","title":"<code>test_create_user_with_empty_mail</code>","text":"<ul> <li>tests whether the system rejects the attempt to create an account with an empty mail</li> <li>input: HTTP request with <code>{\"user_name\": \"Rane Loewe\", \"user_mail\": \"\", \"user_\": \"Lohw3\"}</code></li> <li>expected output: <code>{\"message\": \"user_mail must not be empty\"}</code> and HTTP status <code>400</code></li> </ul>"},{"location":"milestones/testing/testing/#test_create_user_with_empty_word","title":"<code>test_create_user_with_empty_word</code>","text":"<ul> <li>tests whether the system rejects the attempt to create an account with an empty word</li> <li>input: HTTP request with <code>{\"user_name\": \"Pepin Kuefer\", \"user_mail\": \"Pepin.Kuefer@example.com\", \"user_\": \"\"}</code></li> <li>expected output: <code>{\"message\": \"user_ must not be empty\"}</code> and HTTP status <code>400</code></li> </ul>"},{"location":"milestones/testing/testing/#test_create_user_with_long_name","title":"<code>test_create_user_with_long_name</code>","text":"<ul> <li>tests whether the system can handle a long name</li> <li><code>&lt;long_name&gt;</code> is a string of 1024 random characters</li> <li>input: HTTP request with <code>{\"user_name\": &lt;long_name&gt;, \"user_mail\": \"long.mail@example.com\", \"user_\": \"Eiph9\"}</code></li> <li>expected output: <code>{\"user_name\": &lt;long_name&gt;, \"user_mail\": \"long.mail@example.com\"}</code> and HTTP status <code>201</code></li> </ul>"},{"location":"milestones/testing/testing/#test_create_user_with_strange_name","title":"<code>test_create_user_with_strange_name</code>","text":"<ul> <li>tests whether the system can handle strange names consisting of unicode characters</li> <li><code>&lt;strange_name&gt;</code> is a string of 14 unicode characters</li> <li>input: HTTP request with <code>{\"user_name\": &lt;strange_name&gt;, \"user_mail\": \"strange.mail@example.com\", \"user_\": \"ai2Ou\"}</code></li> <li>expected output: <code>{\"user_name\": &lt;strange_name&gt;, \"user_mail\": \"strange.mail@example.com\", }</code> and HTTP status <code>201</code></li> </ul>"},{"location":"milestones/testing/testing/#put-tests_2","title":"PUT tests","text":""},{"location":"milestones/testing/testing/#test_change_mail_to_existing","title":"<code>test_change_mail_to_existing</code>","text":"<ul> <li>tests whether the system rejects the attempt to change the mail to an already existing one</li> <li>input: HTTP request with <code>\"user_mail\": \"double.mail@example.com\"</code></li> <li>expected output: <code>{\"message\": \"A user with this mail already exists\"}</code> and HTTP status <code>409</code></li> </ul>"},{"location":"milestones/testing/testing/#test_change_to_empty_name","title":"<code>test_change_to_empty_name</code>","text":"<ul> <li>tests whether the system rejects the attempt to change to an empty name</li> <li>input: HTTP request with <code>\"user_name\": \"\"</code></li> <li>expected output: <code>{\"message\": \"user_name must no be empty\"}</code> and HTTP status <code>400</code></li> </ul>"},{"location":"milestones/testing/testing/#test_change_to_empty_mail","title":"<code>test_change_to_empty_mail</code>","text":"<ul> <li>tests whether the system rejects the attempt to change to an empty mail</li> <li>input: HTTP request with <code>\"user_mail\": \"\"</code></li> <li>expected output: <code>{\"message\": \"user_mail must not be empty\"}</code> and HTTP status <code>400</code></li> </ul>"},{"location":"milestones/testing/testing/#test_change_to_empty_word","title":"<code>test_change_to_empty_word</code>","text":"<ul> <li>tests whether the system rejects the attempt to change to an empty </li> <li>input: HTTP request with <code>\"user_\": \"\"</code></li> <li>expected output: <code>{\"message\": \"user_ must not be empty\"}</code> and HTTP status <code>400</code></li> </ul>"},{"location":"milestones/testing/testing/#test_change_admin_elevation","title":"<code>test_change_admin_elevation</code>","text":"<ul> <li>tests whether the system rejects the attempt to raise the user role to Admin without a SAdmin token</li> <li>input HTTP request with <code>\"user_role\": 2</code> but no SAdmin token in header</li> <li>expected output: <code>{\"message\": \"No Access\"}</code> and HTTP status <code>403</code></li> </ul>"},{"location":"milestones/testing/testing/#test_change_sadmin_elevation","title":"<code>test_change_sadmin_elevation</code>","text":"<ul> <li>tests whether the system rejects the attempt to raise the user role to SAdmin without a SAdmin token</li> <li>input: HTTP request with <code>\"user_role\": 1</code> but no SAdmin token in header</li> <li>expected output: <code>{\"message\": \"No Access\"}</code> and HTTP status <code>403</code></li> </ul>"},{"location":"milestones/testing/testing/#delete-tests_2","title":"DELETE tests","text":""},{"location":"milestones/testing/testing/#test_delete_existing_2","title":"<code>test_delete_existing</code>","text":"<ul> <li>tests whether the system correctly deletes an existing user</li> <li>input: HTTP request with a previously created used ID</li> <li>expected output: <code>{\"message\": \"Successfully deleted user with user_id &lt;user_id&gt;\"}</code> and HTTP status <code>200</code></li> </ul>"},{"location":"milestones/testing/testing/#test_delete_non_existing_2","title":"<code>test_delete_non_existing</code>","text":"<ul> <li>tests whether the system handles deleting a non existing user</li> <li>input: HTTP request whit a user ID which does not exist</li> <li>expected output: <code>{\"message\": \"User with user_id &lt;user_id&gt; does not exist\"}</code> and HTTP status <code>404</code></li> </ul>"},{"location":"milestones/testing/testing/#test_delete_self_as_admin","title":"<code>test_delete_self_as_admin</code>","text":"<ul> <li>tests whether a request with an admin token can delete an admin account</li> <li>input: HTTP request with admin token</li> <li>expected output: <code>{\"message\": \"Successfully deleted user with user_id &lt;user_id&gt;}</code> and HTTP status <code>200</code></li> </ul>"},{"location":"milestones/testing/testing/#test_delete_self_as_user","title":"<code>test_delete_self_as_user</code>","text":"<ul> <li>tests whether a request with a user token can delete the account associated with the token</li> <li>input: HTTP request with user token</li> <li>expected output: <code>{\"message\": \"Successfully deleted user with user_id &lt;user_id&gt;\"}</code> and HTTP status <code>200</code></li> </ul>"},{"location":"milestones/testing/testing/#test_delete_other_as_admin","title":"<code>test_delete_other_as_admin</code>","text":"<ul> <li>tests whether a request with an admin token can delete another account</li> <li>input: HTTP request with admin token</li> <li>expected output: <code>{\"message\": \"Successfully deleted user with user_id &lt;user_id&gt;\"}</code> and HTTP status <code>200</code></li> </ul>"},{"location":"milestones/testing/testing/#test_delete_other_as_user","title":"<code>test_delete_other_as_user</code>","text":"<ul> <li>tests whether the system rejects the attempt of a request with a user token to delete another account</li> <li>input: HTTP request with user token</li> <li>expected output: <code>{\"message\": \"No Access}</code> and HTTP status <code>403</code></li> </ul>"}]}